var g=Object.defineProperty;var d=(t,e,o)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var a=(t,e,o)=>(d(t,typeof e!="symbol"?e+"":e,o),o);import{aJ as w,gd as P,aL as k,gq as A,aP as n,aQ as R,l as b,c as q,r as D,m as S,E as v,Q as I,bp as E,aR as Q,j as m,aM as L}from"./index-60943df8.js";class T{constructor(e){a(this,"repository");a(this,"queryArgs");this.tokens=e;const o=w();this.repository=new o(this.buildRepositories(),{timeout:30*1e3}),this.queryArgs={}}async fetch(e){this.queryArgs=e;const[o]=await this.repository.fetch();return o}initializeDecoratedAPIRepository(){return{fetch:async()=>{const e=await P.pool.get(this.queryArgs);if(!e)throw new Error("Cannot find pool via Balancer API");return[e]},get skip(){return 0}}}initializeDecoratedSubgraphRepository(){return{fetch:async()=>{const e=await k.pools.get(this.queryArgs);return await new n(e).decorate(this.tokens.value,!0)},get skip(){return 0}}}buildRepositories(){const e=[];if(A){const s=this.initializeDecoratedAPIRepository();e.push(s)}const o=this.initializeDecoratedSubgraphRepository();return e.push(o),e}}function x(t,e=v(!0),o={}){const s=R.findPool(t),{injectTokens:c,tokens:i}=b(),l=new T(i),u=q(()=>e.value);function p(){return{chainId:m.network.chainId,where:{id:{eq:t==null?void 0:t.toLowerCase()},totalShares:{gt:-1},poolType:{in:L.IncludedPoolTypes}}}}const y=I.Pools.Current(t),h=async()=>{let r;if(s?r=s:r=await l.fetch(p()),!r)throw new Error("Pool does not exist");return r.onchain||([r]=await new n([r]).decorate(i.value,!1)),c([...E(r),...Q(r.tokens),r.address]),r},f=D({enabled:u,keepPreviousData:!0,refetchOnWindowFocus:!1,...o});return S(y,h,f)}export{x as u};
//# sourceMappingURL=usePoolQuery-da6fa219.js.map
