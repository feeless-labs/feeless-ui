{"version":3,"file":"UnlockPreviewModal.vue_vue_type_script_setup_true_lang-e5bd9b8c.js","sources":["../../src/components/forms/lock_actions/UnlockForm/components/UnlockPreviewModal/components/UnlockActions.vue","../../src/components/forms/lock_actions/UnlockForm/components/UnlockPreviewModal/components/UnlockAmount.vue","../../src/components/forms/lock_actions/UnlockForm/components/UnlockPreviewModal/components/UnlockSummary.vue","../../src/components/forms/lock_actions/UnlockForm/components/UnlockPreviewModal/UnlockPreviewModal.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  TransactionReceipt,\n  TransactionResponse,\n} from '@ethersproject/abstract-provider';\nimport { reactive, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport useConfig from '@/composables/useConfig';\nimport useEthers from '@/composables/useEthers';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { dateTimeLabelFor } from '@/composables/useTime';\nimport useTransactions from '@/composables/useTransactions';\nimport { balancerContractsService } from '@/services/balancer/contracts/balancer-contracts.service';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { TokenInfo } from '@/types/TokenList';\nimport { TransactionActionInfo } from '@/types/transactions';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePoolTokenInfo: TokenInfo;\n  totalLpTokens: string;\n};\n\ntype UnlockActionState = {\n  init: boolean;\n  confirming: boolean;\n  confirmed: boolean;\n  confirmedAt: string;\n  receipt?: TransactionReceipt;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\nconst emit = defineEmits<{\n  (e: 'success', value: UnlockActionState): void;\n  (e: 'close'): void;\n}>();\n\n/**\n * STATE\n */\nconst unlockActionState = reactive<UnlockActionState>({\n  init: false,\n  confirming: false,\n  confirmed: false,\n  confirmedAt: '',\n});\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\nconst { networkConfig } = useConfig();\nconst { getProvider, explorerLinks, isMismatchedNetwork } = useWeb3();\nconst { addTransaction } = useTransactions();\nconst { txListener, getTxConfirmedAt } = useEthers();\n\nconst { fNum } = useNumbers();\n\nconst unlockAction: TransactionActionInfo = {\n  label: t(`unlockVeBAL.previewModal.actions.unlock.label`),\n  loadingLabel: t(`unlockVeBAL.previewModal.actions.unlock.loadingLabel`),\n  confirmingLabel: t(`unlockVeBAL.previewModal.actions.unlock.confirming`),\n  action: submit,\n  stepTooltip: t(`unlockVeBAL.previewModal.actions.unlock.tooltip`),\n};\n\nconst actions = ref<TransactionActionInfo[]>([unlockAction]);\n\n/**\n * METHODS\n */\nasync function handleTransaction(tx: TransactionResponse): Promise<void> {\n  addTransaction({\n    id: tx.hash,\n    type: 'tx',\n    action: 'unlock',\n    summary: `${fNum(props.totalLpTokens, FNumFormats.token)} ${\n      props.lockablePoolTokenInfo.symbol\n    }`,\n    details: {\n      totalLpTokens: props.totalLpTokens,\n    },\n  });\n\n  unlockActionState.confirmed = await txListener(tx, {\n    onTxConfirmed: async (receipt: TransactionReceipt) => {\n      emit('success', unlockActionState);\n\n      unlockActionState.confirming = false;\n      unlockActionState.receipt = receipt;\n\n      const confirmedAt = await getTxConfirmedAt(receipt);\n      unlockActionState.confirmedAt = dateTimeLabelFor(confirmedAt);\n    },\n    onTxFailed: () => {\n      unlockActionState.confirming = false;\n    },\n  });\n}\n\nasync function submit() {\n  try {\n    let tx: TransactionResponse;\n    unlockActionState.init = true;\n\n    tx = await balancerContractsService.veBAL.unlock(getProvider());\n\n    unlockActionState.init = false;\n    unlockActionState.confirming = true;\n\n    console.log('Receipt', tx);\n\n    handleTransaction(tx);\n    return tx;\n  } catch (error) {\n    console.error(error);\n    return Promise.reject(error);\n  }\n}\n</script>\n\n<template>\n  <div>\n    <BalActionSteps\n      v-if=\"!unlockActionState.confirmed\"\n      :actions=\"actions\"\n      :disabled=\"isMismatchedNetwork\"\n      primaryActionType=\"unlock\"\n    />\n    <template v-else>\n      <div\n        class=\"flex justify-between items-center mt-4 text-sm text-gray-400 dark:text-gray-600\"\n      >\n        <div class=\"flex items-center\">\n          <BalIcon name=\"clock\" />\n          <span class=\"ml-2\">\n            {{ unlockActionState.confirmedAt }}\n          </span>\n        </div>\n        <BalLink\n          v-if=\"unlockActionState.receipt\"\n          :href=\"\n            explorerLinks.txLink(unlockActionState.receipt.transactionHash)\n          \"\n          external\n          noStyle\n          class=\"group flex items-center\"\n        >\n          {{ networkConfig.explorerName }}\n          <BalIcon\n            name=\"arrow-up-right\"\n            size=\"sm\"\n            class=\"ml-px group-hover:text-pink-500 transition-colors\"\n          />\n        </BalLink>\n      </div>\n      <BalBtn color=\"gray\" outline block class=\"mt-2\" @click=\"emit('close')\">\n        {{ $t('unlockVeBAL.previewModal.returnToVeBalPage') }}\n      </BalBtn>\n    </template>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { Pool } from '@/services/pool/types';\nimport { PoolToken } from '@feeless/sdk';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  totalLpTokens: string;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { getToken } = useTokens();\nconst { fNum } = useNumbers();\n\n/**\n * COMPUTED\n */\nconst poolWeightsLabel = computed(() =>\n  props.lockablePool.tokens\n    .map(token => {\n      const weightLabel = formatWeightLabel(token.weight);\n      const symbol = token.symbol ?? getToken(token.address).symbol;\n\n      return `${weightLabel} ${symbol}`;\n    })\n    .join(' / ')\n);\n\n/**\n * METHODS\n */\nfunction formatWeightLabel(weight: PoolToken['weight']) {\n  return fNum(weight || '0', {\n    style: 'percent',\n    maximumFractionDigits: 0,\n  });\n}\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"flex justify-between items-center p-3\">\n      <div>\n        <div class=\"font-semibold\">\n          {{\n            $t('getVeBAL.previewModal.lpTokens', [\n              fNum(totalLpTokens, FNumFormats.token),\n            ])\n          }}\n        </div>\n        <div class=\"text-gray-400 dark:text-gray-600\">\n          {{ poolWeightsLabel }}\n        </div>\n      </div>\n      <div class=\"grid grid-cols-2 gap-1\">\n        <BalAsset\n          v-for=\"tokenAddress in lockablePool.tokensList\"\n          :key=\"tokenAddress\"\n          :address=\"tokenAddress\"\n          :size=\"30\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.container {\n  @apply shadow-lg border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { format } from 'date-fns';\n\nimport { PRETTY_DATE_FORMAT } from '@/components/forms/lock_actions/constants';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport useVeBal from '@/composables/useVeBAL';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\n\n/**\n * TYPES\n */\ntype Props = {\n  fiatTotalLpTokens: string;\n  veBalLockInfo: VeBalLockInfo;\n};\n\n/**\n * PROPS\n */\ndefineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { veBalTokenInfo } = useVeBal();\n\n/**\n * COMPUTED\n */\n</script>\n\n<template>\n  <div class=\"summary-table\">\n    <h6 class=\"p-2\">\n      {{ $t('unlockVeBAL.previewModal.summary.title') }}\n    </h6>\n    <div class=\"p-2\">\n      <div class=\"summary-item-row\">\n        <div>\n          {{ $t('unlockVeBAL.previewModal.summary.totalToUnlock') }}\n        </div>\n        <div>\n          {{ fNum(fiatTotalLpTokens, FNumFormats.fiat) }}\n        </div>\n      </div>\n      <div class=\"summary-item-row\">\n        <div>\n          {{ $t('unlockVeBAL.previewModal.summary.totalVotingEscrow') }}\n        </div>\n        <div>\n          {{ fNum(0, FNumFormats.token) }}\n          {{ veBalTokenInfo?.symbol }}\n        </div>\n      </div>\n      <div class=\"summary-item-row\">\n        <div>\n          {{ $t('unlockVeBAL.previewModal.summary.expiredOn') }}\n        </div>\n        <div>\n          {{ format(veBalLockInfo.lockedEndDate, PRETTY_DATE_FORMAT) }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.summary-table {\n  @apply border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg mt-4;\n}\n\n.summary-item-row {\n  @apply flex justify-between pb-2;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport useVeBalLockInfoQuery from '@/composables/queries/useVeBalLockInfoQuery';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { Pool } from '@/services/pool/types';\nimport { TokenInfo } from '@/types/TokenList';\n\nimport UnlockActions from './components/UnlockActions.vue';\nimport UnlockAmount from './components/UnlockAmount.vue';\nimport UnlockSummary from './components/UnlockSummary.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n  veBalLockInfo: VeBalLockInfo;\n  totalLpTokens: string;\n  fiatTotalLpTokens: string;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\nconst emit = defineEmits<{\n  (e: 'close'): void;\n}>();\n\n/**\n * COMPOSABLES\n */\nconst { refetch: refetchLockInfo } = useVeBalLockInfoQuery();\n\n/**\n * STATE\n */\nconst unlockConfirmed = ref(false);\nconst lockablePool = ref(props.lockablePool);\nconst lockablePoolTokenInfo = ref(props.lockablePoolTokenInfo);\nconst veBalLockInfo = ref(props.veBalLockInfo);\nconst totalLpTokens = ref(props.totalLpTokens);\nconst fiatTotalLpTokens = ref(props.fiatTotalLpTokens);\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\n\n/**\n * COMPUTED\n */\nconst title = computed(() => {\n  return unlockConfirmed.value\n    ? t(`unlockVeBAL.previewModal.titles.unlock.confirmed`)\n    : t(`unlockVeBAL.previewModal.titles.unlock.default`);\n});\n\n/**\n * METHODS\n */\nfunction handleClose() {\n  emit('close');\n}\n\nfunction handleSuccess() {\n  unlockConfirmed.value = true;\n  refetchLockInfo();\n}\n</script>\n\n<template>\n  <BalModal show :fireworks=\"unlockConfirmed\" @close=\"handleClose\">\n    <template #header>\n      <div class=\"flex items-center\">\n        <BalCircle\n          v-if=\"unlockConfirmed\"\n          size=\"8\"\n          color=\"green\"\n          class=\"mr-2 text-white\"\n        >\n          <BalIcon name=\"check\" />\n        </BalCircle>\n        <h4>\n          {{ title }}\n        </h4>\n      </div>\n    </template>\n\n    <UnlockAmount :lockablePool=\"lockablePool\" :totalLpTokens=\"totalLpTokens\" />\n\n    <UnlockSummary\n      :fiatTotalLpTokens=\"fiatTotalLpTokens\"\n      :veBalLockInfo=\"veBalLockInfo\"\n    />\n\n    <UnlockActions\n      :lockablePool=\"lockablePool\"\n      :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n      :totalLpTokens=\"totalLpTokens\"\n      :veBalLockInfo=\"veBalLockInfo\"\n      class=\"mt-4\"\n      @success=\"handleSuccess\"\n      @close=\"handleClose\"\n    />\n  </BalModal>\n</template>\n"],"names":["props","__props","emit","__emit","unlockActionState","reactive","useI18n","networkConfig","useConfig","getProvider","explorerLinks","isMismatchedNetwork","useWeb3","addTransaction","useTransactions","txListener","getTxConfirmedAt","useEthers","fNum","useNumbers","unlockAction","submit","actions","ref","handleTransaction","tx","FNumFormats","receipt","confirmedAt","dateTimeLabelFor","balancerContractsService","error","getToken","useTokens","poolWeightsLabel","computed","token","weightLabel","formatWeightLabel","symbol","weight","veBalTokenInfo","useVeBal","refetchLockInfo","useVeBalLockInfoQuery","unlockConfirmed","lockablePool","lockablePoolTokenInfo","veBalLockInfo","totalLpTokens","fiatTotalLpTokens","t","title","handleClose","handleSuccess"],"mappings":"4wBAqCA,MAAAA,EAAAC,EAEAC,EAAAC,EAQAC,EAAAC,EAAA,CAAsD,KAAA,GAC9C,WAAA,GACM,UAAA,GACD,YAAA,EACE,CAAA,EAMf,CAAA,GAAAC,IACA,CAAA,cAAAC,GAAAC,IACA,CAAA,YAAAC,EAAA,cAAAC,EAAA,oBAAAC,CAAA,EAAAC,EAAA,EACA,CAAA,eAAAC,GAAAC,IACA,CAAA,WAAAC,EAAA,iBAAAC,CAAA,EAAAC,EAAA,EAEA,CAAA,KAAAC,GAAAC,IAEAC,EAAA,CAA4C,MAAA,EAAA,+CAAA,EACc,aAAA,EAAA,sDAAA,EACc,gBAAA,EAAA,oDAAA,EACC,OAAAC,EAC/D,YAAA,EAAA,iDAAA,CACwD,EAGlEC,EAAAC,EAAA,CAAAH,CAAA,CAAA,EAKA,eAAAI,EAAAC,EAAA,CACEZ,EAAA,CAAe,GAAAY,EAAA,KACN,KAAA,KACD,OAAA,SACE,QAAA,GAAAP,EAAAlB,EAAA,cAAA0B,EAAA,KAAA,CAAA,IAAA1B,EAAA,sBAAA,MAAA,GAGR,QAAA,CACS,cAAAA,EAAA,aACc,CACvB,CAAA,EAGFI,EAAA,UAAA,MAAAW,EAAAU,EAAA,CAAmD,cAAA,MAAAE,GAAA,CAE/CzB,EAAA,UAAAE,CAAA,EAEAA,EAAA,WAAA,GACAA,EAAA,QAAAuB,EAEA,MAAAC,EAAA,MAAAZ,EAAAW,CAAA,EACAvB,EAAA,YAAAyB,EAAAD,CAAA,CAA4D,EAC9D,WAAA,IAAA,CAEExB,EAAA,WAAA,EAA+B,CACjC,CAAA,CACD,CAGH,eAAAiB,GAAA,CACE,GAAA,CACE,IAAAI,EACA,OAAArB,EAAA,KAAA,GAEAqB,EAAA,MAAAK,EAAA,MAAA,OAAArB,EAAA,CAAA,EAEAL,EAAA,KAAA,GACAA,EAAA,WAAA,GAEA,QAAA,IAAA,UAAAqB,CAAA,EAEAD,EAAAC,CAAA,EACAA,CAAO,OAAAM,EAAA,CAEP,eAAA,MAAAA,CAAA,EACA,QAAA,OAAAA,CAAA,CAA2B,CAC7B,6/BCzGF,MAAA/B,EAAAC,EAKA,CAAA,SAAA+B,GAAAC,IACA,CAAA,KAAAf,GAAAC,IAKAe,EAAAC,EAAyB,IAAAnC,EAAA,aAAA,OAAA,IAAAoC,GAAA,CAGnB,MAAAC,EAAAC,EAAAF,EAAA,MAAA,EACAG,EAAAH,EAAA,QAAAJ,EAAAI,EAAA,OAAA,EAAA,OAEA,MAAA,GAAAC,CAAA,IAAAE,CAAA,EAA+B,CAAA,EAAA,KAAA,KAAA,CAEtB,EAMf,SAAAD,EAAAE,EAAA,CACE,OAAAtB,EAAAsB,GAAA,IAAA,CAA2B,MAAA,UAClB,sBAAA,CACgB,CAAA,CACxB,imBCxBH,KAAA,CAAA,KAAAtB,GAAAC,IACA,CAAA,eAAAsB,GAAAC,w0BCEA,MAAA1C,EAAAC,EAEAC,EAAAC,EAOA,CAAA,QAAAwC,CAAA,EAAAC,GAAA,EAKAC,EAAAtB,EAAA,EAAA,EACAuB,EAAAvB,EAAAvB,EAAA,YAAA,EACA+C,EAAAxB,EAAAvB,EAAA,qBAAA,EACAgD,EAAAzB,EAAAvB,EAAA,aAAA,EACAiD,EAAA1B,EAAAvB,EAAA,aAAA,EACAkD,EAAA3B,EAAAvB,EAAA,iBAAA,EAKA,CAAA,EAAAmD,GAAA7C,IAKA8C,EAAAjB,EAAA,IACEU,EAAA,MAAAM,EAAA,kDAAA,EAAAA,EAAA,gDAAA,CAEsD,EAMxD,SAAAE,GAAA,CACEnD,EAAA,OAAA,CAAY,CAGd,SAAAoD,GAAA,CACET,EAAA,MAAA,GACAF,GAAgB"}