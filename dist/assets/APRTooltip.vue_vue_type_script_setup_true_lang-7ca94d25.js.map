{"version":3,"file":"APRTooltip.vue_vue_type_script_setup_true_lang-7ca94d25.js","sources":["../../src/components/tooltips/APRTooltip/components/StakingBreakdown.vue","../../src/components/tooltips/APRTooltip/components/VeBalBreakdown.vue","../../src/components/tooltips/APRTooltip/components/YieldBreakdown.vue","../../src/components/tooltips/APRTooltip/APRTooltip.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { bnum } from '@/lib/utils';\nimport { Pool } from '@/services/pool/types';\nimport { AprBreakdown } from '@feeless/sdk';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { hasBalEmissions } from '@/composables/useAPR';\nimport useWeb3 from '@/services/web3/useWeb3';\n\n/**\n * TYPES\n */\ntype Props = {\n  pool: Pool;\n  poolApr?: AprBreakdown;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { getToken } = useTokens();\nconst { isWalletReady } = useWeb3();\n\n/**\n * COMPUTED\n */\n\nconst apr = computed(() => props.pool?.apr || props.poolApr);\n\nconst boost = computed((): string => props.pool?.boost || '');\nconst hasBoost = computed(\n  (): boolean => !!boost.value && boost.value !== '1' && isWalletReady.value\n);\nconst stakingAPR = computed(\n  (): AprBreakdown['stakingApr'] | undefined => apr.value?.stakingApr\n);\nconst isMinMaxSame = computed(\n  (): boolean => stakingAPR.value?.min === stakingAPR.value?.max\n);\nconst minBalAPR = computed((): number => stakingAPR.value?.min || 0);\nconst maxBalAPR = computed((): number => stakingAPR.value?.max || 0);\nconst rewardTokensAPR = computed(\n  (): number => apr.value?.rewardAprs.total || 0\n);\nconst hasRewardTokens = computed((): boolean =>\n  bnum(rewardTokensAPR.value).gt(0)\n);\n\nconst realMinAPR = computed((): number =>\n  bnum(minBalAPR.value).plus(rewardTokensAPR.value).toNumber()\n);\nconst realMaxAPR = computed((): number =>\n  bnum(maxBalAPR.value).plus(rewardTokensAPR.value).toNumber()\n);\n\n/**\n * @summary The total APR if we have the user's boost.\n */\nconst boostedTotalAPR = computed((): string => {\n  if (apr.value && hasBalEmissions(apr.value)) {\n    const boostedStakingAPR = bnum(minBalAPR.value)\n      .times(boost.value)\n      .plus(rewardTokensAPR.value)\n      .toString();\n\n    return fNum(boostedStakingAPR, FNumFormats.bp);\n  }\n\n  return fNum(rewardTokensAPR.value, FNumFormats.bp);\n});\n\nconst stakingAprRange = computed(() => {\n  if (isMinMaxSame.value) return fNum(realMinAPR.value, FNumFormats.bp);\n\n  return `${fNum(realMinAPR.value, FNumFormats.bp)} - ${fNum(\n    realMaxAPR.value,\n    FNumFormats.bp\n  )}`;\n});\n\nconst breakdownItems = computed((): Array<any> => {\n  const items: Array<any> = [];\n\n  if (!isMinMaxSame.value) {\n    items.push(['Min BAL', minBalAPR.value], ['Max BAL', maxBalAPR.value]);\n  }\n\n  if (hasRewardTokens.value) {\n    if (isMinMaxSame.value && minBalAPR.value > 0) {\n      items.push(['BAL', minBalAPR.value]);\n    }\n\n    const rewardAprTokens = apr.value?.rewardAprs.breakdown;\n    if (rewardAprTokens) {\n      Object.keys(rewardAprTokens).forEach(address => {\n        if (rewardAprTokens[address] === 0) return;\n\n        items.push([\n          getToken(address)?.symbol || 'Rewards',\n          rewardAprTokens[address],\n        ]);\n      });\n    } else {\n      items.push(['Rewards', rewardTokensAPR.value]);\n    }\n  }\n\n  return items;\n});\n</script>\n\n<template>\n  <div data-testid=\"staking-apr\">\n    <template v-if=\"hasBoost\">\n      <BalHStack justify=\"between\" class=\"font-bold\">\n        <span>Staking APR</span>\n        {{ boostedTotalAPR }}\n      </BalHStack>\n    </template>\n    <template v-else>\n      <BalHStack justify=\"between\" class=\"font-bold\">\n        <span>Staking APR</span>\n        {{ stakingAprRange }}\n      </BalHStack>\n      <BalVStack spacing=\"xs\" class=\"mt-1\">\n        <BalHStack\n          v-for=\"([label, amount], i) in breakdownItems\"\n          :key=\"i\"\n          justify=\"between\"\n          class=\"text-gray-500\"\n        >\n          <span class=\"ml-2\">{{ label }} {{ $t('apr') }} </span>\n          {{ fNum(amount, FNumFormats.bp) }}\n        </BalHStack>\n      </BalVStack>\n    </template>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\n\n/**\n * TYPES\n */\ntype Props = {\n  apr: number;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\n\n/**\n * COMPUTED\n */\nconst aprLabel = computed((): string => fNum(props.apr, FNumFormats.bp));\n</script>\n\n<template>\n  <div\n    data-testid=\"vebal-apr\"\n    class=\"flex justify-between items-center text-sm font-bold\"\n  >\n    <span>{{ $t('tooltips.veBalApr.title') }}</span>\n    <span>{{ aprLabel }}</span>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { Pool } from '@/services/pool/types';\nimport { AprBreakdown } from '@feeless/sdk';\nimport { getAddress } from '@ethersproject/address';\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\n\n/**\n * TYPES\n */\ntype Props = {\n  yieldAPR: AprBreakdown['tokenAprs'];\n  pool: Pool;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { getTokens } = useTokens();\nconst { fNum } = useNumbers();\n\n/**\n * COMPUTED\n */\nconst yieldAPRTokens = computed(() => {\n  return getTokens(Object.keys(props.yieldAPR.breakdown));\n});\n\nconst yieldBreakdownItems = computed((): [string, number][] =>\n  Object.entries(props.yieldAPR.breakdown)\n);\n</script>\n\n<template>\n  <div data-testid=\"yield-apr\">\n    <BalHStack justify=\"between\" class=\"font-bold\">\n      <span>{{ $t('yieldAprRewards.apr.boosted') }}</span>\n      {{ fNum(yieldAPR.total, FNumFormats.bp) }}\n    </BalHStack>\n    <BalVStack spacing=\"xs\" class=\"mt-1\">\n      <BalHStack\n        v-for=\"([address, amount], index) in yieldBreakdownItems\"\n        :key=\"index\"\n        justify=\"between\"\n        class=\"text-gray-500\"\n      >\n        <span class=\"ml-2\">\n          {{ yieldAPRTokens[getAddress(address)]?.symbol }} {{ $t('apr') }}\n        </span>\n        {{ fNum(amount, FNumFormats.bp) }}\n      </BalHStack>\n    </BalVStack>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { isVeBalPool, totalAprLabel } from '@/composables/usePoolHelpers';\nimport { APR_THRESHOLD } from '@/constants/pools';\nimport { bnum } from '@/lib/utils';\nimport { Pool } from '@/services/pool/types';\n\nimport StakingBreakdown from './components/StakingBreakdown.vue';\nimport VeBalBreakdown from './components/VeBalBreakdown.vue';\nimport YieldBreakdown from './components/YieldBreakdown.vue';\nimport { AprBreakdown } from '@feeless/sdk';\nimport { hasStakingRewards } from '@/composables/useAPR';\nimport useWeb3 from '@/services/web3/useWeb3';\n\n/**\n * TYPES\n */\ntype Props = {\n  pool: Pool;\n  poolApr?: AprBreakdown;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { isWalletReady } = useWeb3();\n\n/**\n * COMPUTED\n */\nconst apr = computed<AprBreakdown | undefined>(\n  () => props.pool?.apr || props.poolApr\n);\nconst validAPR = computed(\n  () => Number(apr.value?.swapFees || 0) <= APR_THRESHOLD\n);\n\nconst hasYieldAPR = computed(() => {\n  return bnum(apr.value?.tokenAprs.total || '0').gt(0);\n});\n\nconst hasVebalAPR = computed((): boolean => isVeBalPool(props.pool.id));\n\nconst totalLabel = computed((): string =>\n  apr.value\n    ? totalAprLabel(apr.value, props.pool.boost, isWalletReady.value)\n    : '0'\n);\n</script>\n\n<template v-slot:aprCell=\"pool\">\n  <BalTooltip v-if=\"validAPR\" width=\"64\" noPad>\n    <template #activator>\n      <div class=\"ml-1\">\n        <StarsIcon\n          v-if=\"hasYieldAPR || hasStakingRewards(apr) || hasVebalAPR\"\n          :gradFrom=\"hasVebalAPR ? 'purple' : 'yellow'\"\n          class=\"-mr-1 h-4\"\n          v-bind=\"$attrs\"\n        />\n        <BalIcon\n          v-else\n          name=\"info\"\n          size=\"sm\"\n          class=\"text-gray-400 dark:text-gray-500\"\n          v-bind=\"$attrs\"\n        />\n      </div>\n    </template>\n    <div class=\"text-sm divide-y dark:divide-gray-900\">\n      <div\n        class=\"px-3 pt-3 pb-1 bg-gray-50 dark:bg-gray-800 rounded-t\"\n        data-testid=\"total-apr\"\n      >\n        <div class=\"text-secondary\">\n          {{ $t('totalAPR') }}\n        </div>\n        <div class=\"text-lg font-bold normal-nums tracking-tighter\">\n          {{ totalLabel }}\n        </div>\n      </div>\n      <div class=\"p-3 text-left\">\n        <!-- VeBal APR -->\n        <VeBalBreakdown\n          v-if=\"hasVebalAPR\"\n          :apr=\"apr?.protocolApr || 0\"\n          class=\"mb-3\"\n        />\n\n        <!-- STAKING APR BREAKDOWN -->\n        <StakingBreakdown :pool=\"pool\" :poolApr=\"apr\" class=\"mb-3\" />\n\n        <!-- YIELD APR BREAKDOWN -->\n        <YieldBreakdown\n          v-if=\"apr?.tokenAprs && hasYieldAPR\"\n          :yieldAPR=\"apr?.tokenAprs\"\n          :pool=\"pool\"\n          class=\"mb-3\"\n        />\n\n        <!-- SWAP FEE APR -->\n        <div\n          class=\"flex justify-between items-center mb-1 text-sm font-bold whitespace-nowrap\"\n          data-testid=\"swap-fee-apr\"\n        >\n          <span>{{ $t('swapFeeAPR') }}</span>\n          {{ fNum(apr?.swapFees || '0', FNumFormats.bp) }}\n        </div>\n      </div>\n    </div>\n  </BalTooltip>\n</template>\n"],"names":["props","__props","fNum","useNumbers","getToken","useTokens","isWalletReady","useWeb3","apr","computed","_a","boost","hasBoost","stakingAPR","isMinMaxSame","_b","minBalAPR","maxBalAPR","rewardTokensAPR","hasRewardTokens","bnum","realMinAPR","realMaxAPR","boostedTotalAPR","hasBalEmissions","boostedStakingAPR","FNumFormats","stakingAprRange","breakdownItems","items","rewardAprTokens","address","aprLabel","getTokens","yieldAPRTokens","yieldBreakdownItems","validAPR","APR_THRESHOLD","hasYieldAPR","hasVebalAPR","isVeBalPool","totalLabel","totalAprLabel"],"mappings":"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"}