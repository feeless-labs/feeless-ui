{"version":3,"file":"claim-submissions-30d55f48.js","sources":["../../src/components/_global/BalContainer/BalContainer.vue","../../src/components/_global/BalSelectInput/BalSelectInput.vue","../../src/pages/claim-submissions.vue"],"sourcesContent":["<template>\n  <div class=\"xl:container xl:px-4 pt-10 md:pt-12 xl:mx-auto\">\n    <slot />\n  </div>\n</template>\n","<template>\n  <div :class=\"['bal-select-input', containerClasses]\">\n    <div class=\"flex items-center h-full\">\n      <div class=\"flex flex-col flex-1 justify-center h-full\">\n        <div v-if=\"label || $slots.label\" :class=\"['label', labelClasses]\">\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </div>\n        <select\n          ref=\"balSelectInput\"\n          :value=\"modelValue\"\n          :name=\"name\"\n          :class=\"[inputClasses]\"\n          v-bind=\"$attrs\"\n          @change=\"onChange\"\n        >\n          <option v-if=\"defaultText\" value selected>\n            {{ defaultText }}\n          </option>\n          <option\n            v-for=\"(option, i) in options\"\n            :key=\"i\"\n            :value=\"valFor(option)\"\n            class=\"\"\n          >\n            {{ textFor(option) }}\n          </option>\n        </select>\n      </div>\n      <BalIcon name=\"chevron-down\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { RuleFunction, Rules } from '@/types';\n\nimport BalIcon from '../BalIcon/BalIcon.vue';\n\nexport default defineComponent({\n  name: 'BalSelectInput',\n\n  components: {\n    BalIcon,\n  },\n\n  props: {\n    modelValue: { type: [String, Number], default: '' },\n    options: { type: Array, required: true },\n    name: { type: String, required: true },\n    label: { type: String, default: '' },\n    validateOn: { type: String, default: 'change' },\n    defaultText: { type: String, default: '' },\n    noMargin: { type: Boolean, default: false },\n    size: {\n      type: String,\n      default: 'md',\n      validator: (val: string): boolean => ['sm', 'md', 'lg'].includes(val),\n    },\n    rules: {\n      type: Array as PropType<Rules>,\n      default: () => [],\n    },\n  },\n\n  emits: ['change', 'update:modelValue'],\n\n  setup(props, { emit }) {\n    const balSelectInput = ref({} as HTMLSelectElement);\n    const errors = ref([] as string[]);\n\n    const hasError = computed(() => errors.value.length > 0);\n\n    const textSizeClasses = computed(() => {\n      switch (props.size) {\n        case 'sm':\n          return 'text-sm';\n        case 'lg':\n          return 'text-lg';\n        default:\n          return 'text-base';\n      }\n    });\n\n    const labelSizeClasses = computed(() => {\n      switch (props.size) {\n        case 'sm':\n          return 'text-xs -mt-4';\n        case 'lg':\n          return 'text-base -mt-8';\n        default:\n          return 'text-sm -mt-6';\n      }\n    });\n\n    const inputHeightClasses = computed(() => {\n      switch (props.size) {\n        case 'sm':\n          return 'h-10';\n        case 'lg':\n          return 'h-16';\n        default:\n          return 'h-10';\n      }\n    });\n\n    const containerClasses = computed(() => {\n      return {\n        [textSizeClasses.value]: true,\n        [inputHeightClasses.value]: true,\n        'mb-5': !props.noMargin,\n      };\n    });\n\n    const inputClasses = computed(() => {\n      return {};\n    });\n\n    const labelClasses = computed(() => {\n      return {\n        [labelSizeClasses.value]: true,\n      };\n    });\n\n    function valFor(option) {\n      if (typeof option === 'string' || option instanceof String) return option;\n      return option.value;\n    }\n\n    function textFor(option) {\n      if (typeof option === 'string' || option instanceof String) return option;\n      return option.text;\n    }\n\n    function onChange(event): void {\n      emit('change', event.target.value);\n      emit('update:modelValue', event.target.value);\n    }\n\n    function validate(val: string): void {\n      errors.value = [];\n      props.rules.forEach((rule: RuleFunction) => {\n        const result = rule(val);\n        if (typeof result === 'string') errors.value.push(result);\n      });\n    }\n\n    return {\n      balSelectInput,\n      hasError,\n      containerClasses,\n      inputClasses,\n      valFor,\n      textFor,\n      validate,\n      labelClasses,\n      onChange,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.bal-select-input {\n  @apply relative rounded-lg shadow hover:shadow-none focus:shadow-none overflow-hidden px-2\n    bg-gray-50 dark:bg-gray-800 transition-all;\n}\n\n.label {\n  @apply text-gray-400;\n}\n\nselect {\n  @apply absolute w-full h-full leading-loose bg-transparent leading-none -ml-px text-xs;\n\n  appearance: none;\n  text-indent: 1px;\n  text-overflow: '';\n}\n\n.bal-select-input .bal-icon :deep(svg) {\n  @apply transition-all;\n\n  /* blue-500 */\n  stroke: #384aff;\n}\n\n.bal-select-input:hover .bal-icon :deep(svg),\n.bal-select-input:focus .bal-icon :deep(svg) {\n  /* pink-500 */\n  stroke: #f21bf6;\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { Config, Network } from '@/lib/config/types';\nimport { isRequired, isTxHash } from '@/lib/utils/validations';\nimport config from '@/lib/config';\nimport TxActionBtn from '@/components/btns/TxActionBtn/TxActionBtn.vue';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { TransactionBuilder } from '@/services/web3/transactions/transaction.builder';\nimport { configService } from '@/services/config/config.service';\nimport {\n  networkId,\n  getNetworkSlug,\n  getNetworkName,\n} from '@/composables/useNetwork';\n\n/**\n * TYPES\n */\ntype Form = {\n  network: Network;\n  txHashes: string[];\n  valid: boolean[];\n};\n\ntype NetworkOption = {\n  text: string;\n  value: Network;\n};\n\n/**\n * STATE\n */\nconst claimsNetwork = Network.MAINNET;\nconst networkOptions: NetworkOption[] = Object.values(config)\n  .filter(\n    config =>\n      (config.visibleInUI || config.chainId === Network.OPTIMISM) &&\n      !config.testNetwork\n  )\n  .map(convertConfigToNetworkOption);\n\nconst form = reactive<Form>({\n  network: networkOptions[0].value,\n  txHashes: [''],\n  valid: [true],\n});\n\n/**\n * COMPOSABLES\n */\nconst {\n  account,\n  getSigner,\n  startConnectWithInjectedProvider,\n  isMismatchedNetwork,\n} = useWeb3();\n\n/**\n * COMPUTED\n */\nconst wrongNetwork = computed(() => networkId.value !== claimsNetwork);\n\nconst formValid = computed(() => {\n  return form.txHashes.every((txHash, index) => {\n    return form.valid[index];\n  });\n});\n\n/**\n * METHODS\n */\nfunction convertConfigToNetworkOption(config: Config): NetworkOption {\n  return {\n    text: config.chainName,\n    value: config.chainId,\n  };\n}\n\nfunction clearForm() {\n  form.network = networkOptions[0].value;\n  form.txHashes = [''];\n  form.valid = [true];\n}\n\nfunction addHash() {\n  form.txHashes.push('');\n}\n\nfunction removeHash(index) {\n  form.txHashes.splice(index, 1);\n}\n\nfunction uniqueTxHash(hashes: string[]) {\n  return v =>\n    !v || hashes.filter(h => h === v).length <= 1 || 'Duplicate transaction';\n}\n\nasync function submitClaim() {\n  const signer = getSigner();\n  const contractAddress = configService.network.addresses.claimSubmission;\n  if (!contractAddress) throw new Error('No contract address found');\n\n  const txBuilder = new TransactionBuilder(signer);\n\n  return txBuilder.contract.sendTransaction({\n    contractAddress: contractAddress,\n    abi: [\n      'function submitClaim(string memory network, bytes32[] memory txHashes) public',\n    ],\n    action: 'submitClaim',\n    params: [form.network.toString(), form.txHashes],\n  });\n}\n</script>\n\n<template>\n  <BalContainer>\n    <BalVStack>\n      <h1 class=\"mb-2\">Claim Submission</h1>\n      <p class=\"mb-4 max-w-3xl\">\n        This tool was created to facilitate user claim submissions resulting\n        from the exploit described\n        <a\n          class=\"link\"\n          href=\"https://medium.com/immunefi/balancer-rounding-error-bugfix-review-cbf69482ee3d\"\n          target=\"_blank\"\n          >here</a\n        >.\n      </p>\n      <p class=\"mb-4 max-w-3xl\">\n        In order to calculate the value of your unrecoverable assets, please\n        <a\n          class=\"link\"\n          href=\"https://app.balancer.fi/#/ethereum/recovery-exit\"\n          target=\"_blank\"\n          >withdraw from the affected liquidity pools</a\n        >\n        and report the withdrawal transaction hash below. The withdrawal needs\n        to take place after the first incident occurred; block 18004633\n        (ethereum) or block 108777562 (optimism).\n      </p>\n\n      <p class=\"mb-4 max-w-3xl\">\n        If you had positions in multiple pools, report multiple withdrawal\n        transaction hashes. If you withdrew partially, report those transactions\n        too. Please file a new report for every chain.\n      </p>\n\n      <p class=\"max-w-3xl font-bold\">\n        Note that the claims period is now closed.\n      </p>\n\n      <div v-if=\"wrongNetwork\" class=\"mt-8\">\n        <p class=\"mb-2\">\n          Claim submission are only accepted on\n          {{ getNetworkName(Network.MAINNET) }}\n        </p>\n        <BalBtn\n          tag=\"router-link\"\n          :to=\"{\n            name: 'claim-submission',\n            params: { networkSlug: getNetworkSlug(Network.MAINNET) },\n          }\"\n          color=\"gradient\"\n          size=\"sm\"\n          >Claim on Ethereum Mainnet</BalBtn\n        >\n      </div>\n\n      <BalCard v-else class=\"mt-8 max-w-lg\" title=\"Claim submission form\">\n        <BalVStack spacing=\"md\">\n          <BalVStack>\n            <div>\n              <BalText>Network</BalText>\n              <BalSelectInput\n                v-model=\"form.network\"\n                name=\"network\"\n                :options=\"networkOptions\"\n                class=\"w-32 h-11\"\n                disabled\n              />\n            </div>\n\n            <div>\n              <BalText>Transaction hashes</BalText>\n              <BalVStack spacing=\"sm\">\n                <BalHStack\n                  v-for=\"(_, index) in form.txHashes\"\n                  :key=\"index\"\n                  width=\"full\"\n                  spacing=\"sm\"\n                  align=\"center\"\n                >\n                  <BalTextInput\n                    v-model=\"form.txHashes[index]\"\n                    v-model:isValid=\"form.valid[index]\"\n                    name=\"txHash\"\n                    size=\"sm\"\n                    placeholder=\"0x...\"\n                    :rules=\"[\n                      isRequired(),\n                      isTxHash(),\n                      uniqueTxHash(form.txHashes),\n                    ]\"\n                    class=\"w-full\"\n                    disabled\n                  />\n                  <BalBtn\n                    v-if=\"index === form.txHashes.length - 1\"\n                    size=\"sm\"\n                    outline\n                    square\n                    color=\"blue\"\n                    :disabled=\"\n                      !formValid ||\n                      form.txHashes[index] === '' ||\n                      form.txHashes.length >= 10\n                    \"\n                    @click=\"addHash\"\n                    ><BalIcon name=\"plus\"\n                  /></BalBtn>\n                  <BalBtn\n                    v-else\n                    size=\"sm\"\n                    outline\n                    square\n                    color=\"gray\"\n                    @click=\"removeHash(index)\"\n                    ><BalIcon name=\"minus\"\n                  /></BalBtn>\n                </BalHStack>\n              </BalVStack>\n            </div>\n          </BalVStack>\n          <BalAlert\n            v-if=\"isMismatchedNetwork\"\n            title=\"Wrong network\"\n            description=\"Your wallet is connected to the wrong network.\"\n            type=\"warning\"\n            class=\"mb-4\"\n          />\n          <TxActionBtn\n            v-if=\"account\"\n            label=\"Submit claim\"\n            color=\"gradient\"\n            size=\"sm\"\n            :actionFn=\"submitClaim\"\n            action=\"claimSubmission\"\n            :summary=\"`Claim submission: ${form.txHashes.length} tx(s)`\"\n            :confirmingLabel=\"`Submitting...`\"\n            disabled\n            @confirmed=\"clearForm()\"\n          />\n          <BalBtn\n            v-else\n            color=\"gradient\"\n            size=\"sm\"\n            disabled\n            @click=\"startConnectWithInjectedProvider\"\n            >Connect wallet</BalBtn\n          >\n        </BalVStack>\n      </BalCard>\n    </BalVStack>\n  </BalContainer>\n</template>\n"],"names":["_sfc_render","_ctx","_cache","_sfc_main$1","defineComponent","BalIcon","val","props","emit","balSelectInput","ref","errors","hasError","computed","textSizeClasses","labelSizeClasses","inputHeightClasses","containerClasses","inputClasses","labelClasses","valFor","option","textFor","onChange","event","validate","rule","result","_hoisted_1","_hoisted_3","__unplugin_components_0","_createElementVNode","_hoisted_2","_openBlock","_createElementBlock","_normalizeClass","_createCommentVNode","_mergeProps","$attrs","_hoisted_4","_toDisplayString","_Fragment","_renderList","i","_hoisted_5","claimsNetwork","Network","networkOptions","config","config2","convertConfigToNetworkOption","form","reactive","account","getSigner","startConnectWithInjectedProvider","isMismatchedNetwork","useWeb3","wrongNetwork","networkId","formValid","txHash","index","clearForm","addHash","removeHash","uniqueTxHash","hashes","v","h","submitClaim","signer","contractAddress","configService","TransactionBuilder"],"mappings":"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"}