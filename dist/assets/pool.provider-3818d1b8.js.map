{"version":3,"file":"pool.provider-3818d1b8.js","sources":["../../src/composables/queries/usePoolDecorationQuery.ts","../../src/providers/local/pool.provider.ts"],"sourcesContent":["import { reactive } from 'vue';\nimport { useQuery, UseQueryOptions } from '@tanstack/vue-query';\nimport { Pool } from '@/services/pool/types';\nimport QUERY_KEYS from '@/constants/queryKeys';\nimport { PoolDecorator } from '@/services/pool/decorators/pool.decorator';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { cloneDeep } from 'lodash';\n\n/**\n * TYPES\n */\ntype QueryResponse = Pool | undefined;\ntype QueryOptions = UseQueryOptions<QueryResponse>;\n\n/**\n * Given a pool, uses PoolDecorator to fetch onchain attributes such as token\n * balances and totalSupply to make sure they're as up to date as possible and\n * returns a decorated pool object with those live values.\n */\nexport default function usePoolDecorationQuery(\n  pool: Ref<Pool | undefined>,\n  options: QueryOptions = {}\n) {\n  /**\n   * COMPOSABLES\n   */\n  const { tokens } = useTokens();\n\n  /**\n   * COMPUTED\n   */\n  const poolId = computed((): string | undefined => pool.value?.id);\n\n  const queryKey = reactive(QUERY_KEYS.Pool.Decorated(poolId));\n\n  const enabled = computed((): boolean => !!pool.value);\n\n  /**\n   * QUERY FUNCTION\n   */\n  const queryFn = async () => {\n    if (!pool.value) return undefined;\n    const _pool = cloneDeep(pool.value);\n    const poolDecorator = new PoolDecorator([_pool]);\n    // Decorate pool updating only the onchain attributes.\n    const [decoratedPool] = await poolDecorator.decorate(tokens.value, false);\n    return decoratedPool;\n  };\n\n  /**\n   * QUERY OPTIONS\n   */\n  const queryOptions = reactive({\n    enabled,\n    ...options,\n  });\n\n  return useQuery<QueryResponse>(\n    queryKey,\n    queryFn,\n    queryOptions as QueryOptions\n  );\n}\n","import usePoolDecorationQuery from '@/composables/queries/usePoolDecorationQuery';\nimport usePoolQuery from '@/composables/queries/usePoolQuery';\nimport { isQueryLoading } from '@/composables/queries/useQueryHelpers';\nimport symbolKeys from '@/constants/symbol.keys';\nimport { Pool } from '@/services/pool/types';\nimport { safeInject } from '../inject';\nimport useAlerts, { AlertPriority, AlertType } from '@/composables/useAlerts';\nimport { useI18n } from 'vue-i18n';\nimport { useUserData } from '../user-data.provider';\n\nexport function poolProvider(poolId: string) {\n  const { addAlert, removeAlert } = useAlerts();\n  const { t } = useI18n();\n\n  const poolQuery = usePoolQuery(poolId);\n  const { userBoostsQuery } = useUserData();\n  const { data: poolBoostsMap } = userBoostsQuery;\n\n  const initialPool = computed((): Pool | undefined => {\n    return poolQuery.data.value;\n  });\n\n  // Updates onchain data and returns new pool object.\n  const { data: decoratedPool, refetch: refetchOnchainPoolData } =\n    usePoolDecorationQuery(initialPool);\n\n  // Is the initial pool query loading?\n  const isLoadingPool = computed(\n    (): boolean => isQueryLoading(poolQuery) || !initialPool.value\n  );\n\n  const userBoost = computed((): string | undefined => {\n    if (!poolBoostsMap.value || !poolId) return '1';\n    const boost = poolBoostsMap.value[poolId];\n    return boost ? boost : '1';\n  });\n\n  const pool = computed((): Pool | undefined => {\n    const _pool = decoratedPool.value || initialPool.value;\n    if (!_pool) return undefined;\n\n    return {\n      boost: userBoost.value,\n      ..._pool,\n    };\n  });\n\n  watch(poolQuery.error, () => {\n    if (poolQuery.error.value) {\n      addAlert({\n        id: 'pool-fetch-error',\n        label: t('alerts.pool-fetch-error'),\n        type: AlertType.ERROR,\n        persistent: true,\n        action: poolQuery.refetch,\n        actionLabel: t('alerts.retry-label'),\n        priority: AlertPriority.MEDIUM,\n      });\n    } else {\n      removeAlert('pool-fetch-error');\n    }\n  });\n\n  return {\n    pool,\n    isLoadingPool,\n    refetchOnchainPoolData,\n  };\n}\n\n/**\n * Provider setup: response type + symbol.\n */\nexport type PoolProviderResponse = ReturnType<typeof poolProvider>;\nexport const PoolProviderSymbol: InjectionKey<PoolProviderResponse> = Symbol(\n  symbolKeys.Providers.Pool\n);\n\nexport function providePool(poolId: string): PoolProviderResponse {\n  const _provider = poolProvider(poolId);\n  provide(PoolProviderSymbol, _provider);\n  return _provider;\n}\n\nexport function usePool(): PoolProviderResponse {\n  return safeInject(PoolProviderSymbol);\n}\n"],"names":["usePoolDecorationQuery","pool","options","tokens","useTokens","poolId","computed","_a","queryKey","reactive","QUERY_KEYS","enabled","queryFn","_pool","cloneDeep","poolDecorator","PoolDecorator","decoratedPool","queryOptions","useQuery","poolProvider","addAlert","removeAlert","useAlerts","t","useI18n","poolQuery","usePoolQuery","userBoostsQuery","useUserData","poolBoostsMap","initialPool","refetchOnchainPoolData","isLoadingPool","isQueryLoading","userBoost","boost","watch","AlertType","AlertPriority","PoolProviderSymbol","symbolKeys","providePool","_provider","provide","usePool","safeInject"],"mappings":"gNAmBA,SAAAA,EAAAC,EAAAC,EAAA,GAAA,CAOE,KAAA,CAAA,OAAAC,GAAAC,IAKAC,EAAAC,EAAA,IAAA,OAAA,OAAAC,EAAAN,EAAA,QAAA,YAAAM,EAAA,GAAA,EAEAC,EAAAC,EAAAC,EAAA,KAAA,UAAAL,CAAA,CAAA,EAEAM,EAAAL,EAAA,IAAA,CAAA,CAAAL,EAAA,KAAA,EAKAW,EAAA,SAAA,CACE,GAAA,CAAAX,EAAA,MAAiB,OACjB,MAAAY,EAAAC,EAAAA,UAAAb,EAAA,KAAA,EACAc,EAAA,IAAAC,EAAA,CAAAH,CAAA,CAAA,EAEA,CAAAI,CAAA,EAAA,MAAAF,EAAA,SAAAZ,EAAA,MAAA,EAAA,EACA,OAAAc,CAAO,EAMTC,EAAAT,EAAA,CAA8B,QAAAE,EAC5B,GAAAT,CACG,CAAA,EAGL,OAAAiB,EAAOX,EACLI,EACAM,CACA,CAEJ,CCpDO,SAAAE,EAAAf,EAAA,CACL,KAAA,CAAA,SAAAgB,EAAA,YAAAC,CAAA,EAAAC,EAAA,EACA,CAAA,EAAAC,GAAAC,IAEAC,EAAAC,EAAAtB,CAAA,EACA,CAAA,gBAAAuB,GAAAC,IACA,CAAA,KAAAC,CAAA,EAAAF,EAEAG,EAAAzB,EAAA,IACEoB,EAAA,KAAA,KAAsB,EAIxB,CAAA,KAAAT,EAAA,QAAAe,GAAAhC,EAAA+B,CAAA,EAIAE,EAAA3B,EAAsB,IAAA4B,EAAAR,CAAA,GAAA,CAAAK,EAAA,KACqC,EAG3DI,EAAA7B,EAAA,IAAA,CACE,GAAA,CAAAwB,EAAA,OAAA,CAAAzB,EAAqC,MAAA,IACrC,MAAA+B,EAAAN,EAAA,MAAAzB,CAAA,EACA,OAAA+B,GAAA,GAAuB,CAAA,EAGzBnC,EAAAK,EAAA,IAAA,CACE,MAAAO,EAAAI,EAAA,OAAAc,EAAA,MACA,GAAAlB,EAEA,MAAA,CAAO,MAAAsB,EAAA,MACY,GAAAtB,CACd,CACL,CAAA,EAGF,OAAAwB,EAAAX,EAAA,MAAA,IAAA,CACEA,EAAA,MAAA,MACEL,EAAA,CAAS,GAAA,mBACH,MAAAG,EAAA,yBAAA,EAC8B,KAAAc,EAAA,MAClB,WAAA,GACJ,OAAAZ,EAAA,QACM,YAAAF,EAAA,oBAAA,EACiB,SAAAe,EAAA,MACX,CAAA,EAG1BjB,EAAA,kBAAA,CACF,CAAA,EAGF,CAAO,KAAArB,EACL,cAAAgC,EACA,uBAAAD,CACA,CAEJ,CAMO,MAAAQ,EAAA,OAA+DC,EAAA,UAAA,IAEtE,EAEO,SAAAC,EAAArC,EAAA,CACL,MAAAsC,EAAAvB,EAAAf,CAAA,EACA,OAAAuC,EAAAJ,EAAAG,CAAA,EACAA,CACF,CAEO,SAAAE,GAAA,CACL,OAAAC,EAAAN,CAAA,CACF"}