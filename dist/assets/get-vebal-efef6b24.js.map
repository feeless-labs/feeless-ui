{"version":3,"file":"get-vebal-efef6b24.js","sources":["../../node_modules/date-fns/esm/addWeeks/index.js","../../node_modules/date-fns/esm/isThursday/index.js","../../node_modules/date-fns/esm/previousDay/index.js","../../node_modules/date-fns/esm/previousThursday/index.js","../../src/components/forms/lock_actions/LockForm/components/HowToLock.vue","../../src/components/forms/lock_actions/LockForm/components/LockableTokens.vue","../../src/components/forms/lock_actions/LockForm/types.ts","../../src/components/forms/lock_actions/LockForm/composables/useLockState.ts","../../src/components/forms/lock_actions/LockForm/composables/useLockAmount.ts","../../src/components/forms/lock_actions/LockForm/composables/useLockEndDate.ts","../../src/components/forms/lock_actions/LockForm/components/LockPreviewModal/components/LockActions.vue","../../src/components/forms/lock_actions/LockForm/components/LockPreviewModal/components/LockAmount.vue","../../src/components/forms/lock_actions/LockForm/components/LockPreviewModal/components/VeBalTooltipExplainer.vue","../../src/components/forms/lock_actions/LockForm/components/LockPreviewModal/components/LockSummary.vue","../../src/components/forms/lock_actions/LockForm/components/LockPreviewModal/LockPreviewModal.vue","../../src/components/forms/lock_actions/LockForm/components/VeBalForm/components/LockAmount.vue","../../src/components/forms/lock_actions/LockForm/components/VeBalForm/components/LockEndDate.vue","../../src/components/forms/lock_actions/LockForm/components/VeBalForm/components/Summary.vue","../../src/components/forms/lock_actions/LockForm/components/VeBalForm/VeBalForm.vue","../../src/components/forms/lock_actions/LockForm/LockForm.vue"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * const result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport subDays from \"../subDays/index.js\";\n/**\n * @name previousDay\n * @category Weekday Helpers\n * @summary When is the previous day of the week?\n *\n * @description\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {number} day - day of the week\n * @returns {Date} - the date is the previous day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the previous Monday before Mar, 20, 2020?\n * const result = previousDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 16 2020 00:00:00\n *\n * @example\n * // When is the previous Tuesday before Mar, 21, 2020?\n * const result = previousDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 17 2020 00:00:00\n */\nexport default function previousDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = getDay(date) - day;\n  if (delta <= 0) delta += 7;\n  return subDays(date, delta);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport previousDay from \"../previousDay/index.js\";\n/**\n * @name previousThursday\n * @category Weekday Helpers\n * @summary When is the previous Thursday?\n *\n * @description\n * When is the previous Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the previous Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the previous Thursday before Jun, 18, 2021?\n * const result = previousThursday(new Date(2021, 5, 18))\n * //=> Thu June 17 2021 00:00:00\n */\nexport default function previousThursday(date) {\n  requiredArgs(1, arguments);\n  return previousDay(date, 4);\n}","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { Pool } from '@/services/pool/types';\nimport { TokenInfo } from '@/types/TokenList';\n\nimport useNetwork from '@/composables/useNetwork';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\nconst { networkSlug } = useNetwork();\n\n/**\n * COMPUTED\n */\nconst steps = computed(() => [\n  t('getVeBAL.howToLock.steps.lock', [props.lockablePoolTokenInfo.symbol]),\n  t('getVeBAL.howToLock.earn.boost'),\n  t('getVeBAL.howToLock.earn.voting'),\n]);\n</script>\n\n<template>\n  <BalAccordion\n    class=\"mt-4\"\n    :showSectionBorder=\"false\"\n    :sections=\"[\n      {\n        title: $t('getVeBAL.howToLock.title'),\n        id: 'how-to-lock',\n        handle: 'how-to-lock-handle',\n      },\n    ]\"\n  >\n    <template #how-to-lock-handle>\n      <button\n        class=\"group flex justify-between items-center p-4 w-full rounded-xl\"\n      >\n        <h6 class=\"group-hover:text-blue-500 transition-colors\">\n          {{ $t('getVeBAL.howToLock.title') }}\n        </h6>\n        <BalIcon\n          name=\"chevron-down\"\n          class=\"text-blue-500 group-hover:text-pink-500 transition-colors\"\n        />\n      </button>\n    </template>\n    <template #how-to-lock>\n      <div class=\"p-4 border-t dark:border-gray-900\">\n        <div class=\"text-secondary\">\n          <ol class=\"text-sm steps\">\n            <li>\n              {{ $t('getVeBAL.howToLock.steps.investPart1') }}\n              <BalLink\n                tag=\"router-link\"\n                :to=\"{\n                  name: 'add-liquidity',\n                  params: { networkSlug, id: lockablePool.id },\n                }\"\n                external\n              >\n                {{ lockablePoolTokenInfo.symbol }}\n              </BalLink>\n              {{ $t('getVeBAL.howToLock.steps.investPart2') }}\n            </li>\n            <li v-for=\"(step, i) in steps\" :key=\"i\" v-html=\"step\" />\n          </ol>\n        </div>\n      </div>\n    </template>\n  </BalAccordion>\n</template>\n<style scoped>\n.steps {\n  @apply list-decimal px-4;\n}\n\n.steps li {\n  @apply pb-2;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\nimport useNetwork from '@/composables/useNetwork';\nimport { bnum } from '@/lib/utils';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { Pool } from '@/services/pool/types';\nimport { TokenInfo } from '@/types/TokenList';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n  veBalLockInfo?: VeBalLockInfo;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { balanceFor } = useTokens();\nconst { fNum } = useNumbers();\nconst { networkSlug } = useNetwork();\n\n/**\n * COMPUTED\n */\nconst bptBalance = computed(() => balanceFor(props.lockablePool.address));\n\nconst fiatTotal = computed((): string =>\n  bnum(props.lockablePool.totalLiquidity)\n    .div(props.lockablePool.totalShares)\n    .times(bptBalance.value)\n    .toString()\n);\n</script>\n\n<template>\n  <BalCard noPad shadow=\"none\">\n    <div class=\"p-4 w-full border-b dark:border-gray-900\">\n      <h6>\n        {{ $t('getVeBAL.lockableTokens.title') }}\n      </h6>\n    </div>\n    <div class=\"p-4 -mt-2\">\n      <div class=\"flex justify-between\">\n        <div>{{ lockablePoolTokenInfo.symbol }}</div>\n        <div>{{ fNum(bptBalance, FNumFormats.token) }}</div>\n      </div>\n      <div class=\"flex justify-between text-secondary\">\n        <div>{{ lockablePoolTokenInfo.name }}</div>\n        <div>{{ fNum(fiatTotal, FNumFormats.fiat) }}</div>\n      </div>\n      <BalLink\n        tag=\"router-link\"\n        :to=\"{\n          name: 'add-liquidity',\n          params: { networkSlug, id: lockablePool.id },\n        }\"\n        external\n        class=\"block mt-2 text-sm\"\n      >\n        {{\n          $t('getVeBAL.lockableTokens.getMoreVeBAL', [\n            lockablePoolTokenInfo.symbol,\n          ])\n        }}\n      </BalLink>\n    </div>\n  </BalCard>\n</template>\n","export enum LockType {\n  CREATE_LOCK = 'createLock',\n  EXTEND_LOCK = 'extendLock',\n  INCREASE_LOCK = 'increaseLock',\n}\n","import { reactive, toRefs } from 'vue';\n\ntype LockState = {\n  lockAmount: string;\n  lockEndDate: string;\n};\n\n/**\n * STATE\n */\nconst state = reactive<LockState>({\n  lockAmount: '',\n  lockEndDate: '',\n});\n\n/**\n * METHODS\n */\nfunction resetState(): void {\n  state.lockAmount = '';\n}\n\nexport default function useLockState() {\n  return {\n    ...toRefs(state),\n    resetState,\n  };\n}\n","import { computed, Ref } from 'vue';\n\nimport { bnum } from '@/lib/utils';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\n\nimport useLockState from './useLockState';\n\nexport default function useLockAmount(\n  veBalLockInfo?: Ref<VeBalLockInfo> | Ref<undefined>\n) {\n  /**\n   * COMPOSABLES\n   */\n  const { lockAmount } = useLockState();\n\n  /**\n   * COMPUTED\n   */\n  const isValidLockAmount = computed(() => bnum(lockAmount.value || '0').gt(0));\n\n  const isIncreasedLockAmount = computed(\n    () => veBalLockInfo?.value?.hasExistingLock && isValidLockAmount.value\n  );\n\n  const totalLpTokens = computed(() => {\n    return veBalLockInfo?.value?.hasExistingLock\n      ? bnum(veBalLockInfo.value.lockedAmount)\n          .plus(lockAmount.value || '0')\n          .toString()\n      : lockAmount.value || '0';\n  });\n\n  return {\n    // computed\n    isValidLockAmount,\n    isIncreasedLockAmount,\n    totalLpTokens,\n  };\n}\n","import {\n  addDays,\n  isThursday,\n  nextThursday,\n  previousThursday,\n  startOfDay,\n} from 'date-fns';\nimport { computed } from 'vue';\n\nimport {\n  MAX_LOCK_PERIOD_IN_DAYS,\n  MIN_LOCK_PERIOD_IN_DAYS,\n} from '@/components/forms/lock_actions/constants';\nimport { toUtcTime } from '@/composables/useTime';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\n\nimport useLockState from './useLockState';\n\nfunction getMaxLockEndDateTimestamp(date: number) {\n  const maxLockTimestamp = addDays(date, MAX_LOCK_PERIOD_IN_DAYS);\n\n  const timestamp = isThursday(maxLockTimestamp)\n    ? maxLockTimestamp\n    : previousThursday(maxLockTimestamp);\n\n  return startOfDay(timestamp).getTime();\n}\n\nexport default function useLockEndDate(veBalLockInfo?: VeBalLockInfo) {\n  /**\n   * STATE\n   */\n  const todaysDate = toUtcTime(new Date());\n\n  const minLockEndDateTimestamp = startOfDay(\n    nextThursday(\n      addDays(\n        veBalLockInfo?.hasExistingLock\n          ? veBalLockInfo.lockedEndDate\n          : todaysDate,\n        MIN_LOCK_PERIOD_IN_DAYS\n      )\n    )\n  ).getTime();\n\n  const maxLockEndDateTimestamp = getMaxLockEndDateTimestamp(todaysDate);\n\n  /**\n   * COMPOSABLES\n   */\n  const { lockEndDate } = useLockState();\n\n  /**\n   * COMPUTED\n   */\n  const lockEndDateTimestamp = computed(() =>\n    lockEndDate.value === ''\n      ? 0\n      : startOfDay(new Date(lockEndDate.value)).getTime()\n  );\n\n  const isValidLockEndDate = computed(\n    () =>\n      lockEndDateTimestamp.value >= minLockEndDateTimestamp &&\n      lockEndDateTimestamp.value <= maxLockEndDateTimestamp\n  );\n\n  const isExtendedLockEndDate = computed(\n    () => veBalLockInfo?.hasExistingLock && isValidLockEndDate.value\n  );\n\n  return {\n    // state\n    todaysDate,\n\n    // computed\n    minLockEndDateTimestamp,\n    maxLockEndDateTimestamp,\n    isValidLockEndDate,\n    isExtendedLockEndDate,\n  };\n}\n","<script setup lang=\"ts\">\nimport {\n  TransactionReceipt,\n  TransactionResponse,\n} from '@ethersproject/abstract-provider';\nimport { format } from 'date-fns';\nimport { computed, onBeforeMount, reactive, ref, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { PRETTY_DATE_FORMAT } from '@/components/forms/lock_actions/constants';\nimport { LockType } from '@/components/forms/lock_actions/LockForm/types';\nimport useConfig from '@/composables/useConfig';\nimport useEthers from '@/composables/useEthers';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { dateTimeLabelFor } from '@/composables/useTime';\nimport useTransactions from '@/composables/useTransactions';\nimport useNetwork from '@/composables/useNetwork';\nimport { balancerContractsService } from '@/services/balancer/contracts/balancer-contracts.service';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { TokenInfo } from '@/types/TokenList';\nimport { TransactionActionInfo } from '@/types/transactions';\nimport useVotingPools from '@/composables/useVotingPools';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { ApprovalAction } from '@/composables/approvals/types';\nimport useTokenApprovalActions from '@/composables/approvals/useTokenApprovalActions';\nimport { captureBalancerException } from '@/lib/utils/errors';\nimport { useCrossChainSync } from '@/providers/cross-chain-sync.provider';\nimport FeedbackCard from '@/components/cards/FeedbackCard.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePoolTokenInfo: TokenInfo;\n  lockAmount: string;\n  lockEndDate: string;\n  lockType: LockType[];\n  lockConfirmed: boolean;\n  veBalLockInfo: VeBalLockInfo;\n};\n\ntype LockActionState = {\n  init: boolean;\n  confirming: boolean;\n  confirmed: boolean;\n  confirmedAt: string;\n  receipt?: TransactionReceipt;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\nconst emit = defineEmits<{\n  (e: 'success', value: LockActionState[]): void;\n}>();\n\n/**\n * STATE\n */\nconst isLoadingApprovals = ref(true);\nconst lockActionStates = reactive<LockActionState[]>(\n  props.lockType.map(() => ({\n    init: false,\n    confirming: false,\n    confirmed: false,\n    confirmedAt: '',\n  }))\n);\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\nconst { networkConfig } = useConfig();\nconst { getProvider, explorerLinks, isMismatchedNetwork } = useWeb3();\nconst { addTransaction } = useTransactions();\nconst { txListener, getTxConfirmedAt } = useEthers();\nconst { fNum } = useNumbers();\nconst { totalVotes, unallocatedVotes } = useVotingPools();\nconst { networkSlug } = useNetwork();\nconst { getTokenApprovalActions } = useTokenApprovalActions();\nconst { refetch: refetchSyncData } = useCrossChainSync();\n\nconst lockActions = props.lockType.map((lockType, actionIndex) => ({\n  label: t(`getVeBAL.previewModal.actions.${lockType}.label`, [\n    format(new Date(props.lockEndDate), PRETTY_DATE_FORMAT),\n  ]),\n  loadingLabel: t(`getVeBAL.previewModal.actions.${lockType}.loadingLabel`),\n  confirmingLabel: t(`getVeBAL.previewModal.actions.${lockType}.confirming`),\n  action: () => submit(lockType, actionIndex),\n  stepTooltip: t(`getVeBAL.previewModal.actions.${lockType}.tooltip`),\n}));\n\nconst actions = ref<TransactionActionInfo[]>([...lockActions]);\n\n/**\n * COMPUTED\n */\nconst lockActionStatesConfirmed = computed(() =>\n  lockActionStates.every(lockActionState => lockActionState.confirmed)\n);\n\nconst shouldResubmitVotes = computed<boolean>(\n  () => totalVotes !== unallocatedVotes.value\n);\n\nconst amountsToApprove = computed(() => [\n  {\n    address: props.lockablePoolTokenInfo.address,\n    amount: props.lockAmount,\n  },\n]);\n\n/**\n * METHODS\n */\nasync function handleTransaction(\n  tx: TransactionResponse,\n  lockType: LockType,\n  actionIndex: number\n): Promise<void> {\n  addTransaction({\n    id: tx.hash,\n    type: 'tx',\n    action: lockType,\n    summary:\n      lockType === LockType.EXTEND_LOCK\n        ? t('transactionSummary.extendLock', [\n            format(new Date(props.lockEndDate), PRETTY_DATE_FORMAT),\n          ])\n        : `${fNum(props.lockAmount, FNumFormats.token)} ${\n            props.lockablePoolTokenInfo.symbol\n          }`,\n    details: {\n      lockAmount: props.lockAmount,\n      lockEndDate: props.lockEndDate,\n      lockType,\n    },\n  });\n\n  lockActionStates[actionIndex].confirmed = await txListener(tx, {\n    onTxConfirmed: async (receipt: TransactionReceipt) => {\n      lockActionStates[actionIndex].confirming = false;\n      lockActionStates[actionIndex].receipt = receipt;\n\n      const confirmedAt = await getTxConfirmedAt(receipt);\n      lockActionStates[actionIndex].confirmedAt = dateTimeLabelFor(confirmedAt);\n\n      refetchSyncData();\n    },\n    onTxFailed: () => {\n      lockActionStates[actionIndex].confirming = false;\n    },\n  });\n}\n\nasync function submit(lockType: LockType, actionIndex: number) {\n  try {\n    let tx: TransactionResponse;\n    lockActionStates[actionIndex].init = true;\n\n    if (lockType === LockType.CREATE_LOCK) {\n      tx = await balancerContractsService.veBAL.createLock(\n        getProvider(),\n        props.lockAmount,\n        props.lockEndDate\n      );\n    } else if (lockType === LockType.EXTEND_LOCK) {\n      tx = await balancerContractsService.veBAL.extendLock(\n        getProvider(),\n        props.lockEndDate\n      );\n    } else if (lockType === LockType.INCREASE_LOCK) {\n      tx = await balancerContractsService.veBAL.increaseLock(\n        getProvider(),\n        props.lockAmount\n      );\n    } else {\n      throw new Error('Unsupported lockType provided');\n    }\n\n    lockActionStates[actionIndex].init = false;\n    lockActionStates[actionIndex].confirming = true;\n\n    console.log('Receipt', tx);\n\n    handleTransaction(tx, lockType, actionIndex);\n    return tx;\n  } catch (error) {\n    // An exception is already logged in balancerContractsService, but we should\n    // log another here in case any exceptions are thrown before it's sent\n    captureBalancerException({\n      error,\n      context: { level: 'fatal', extra: { lockType, props } },\n    });\n\n    return Promise.reject(error);\n  }\n}\n\n/**\n * WATCHERS\n */\nwatch(lockActionStatesConfirmed, () => {\n  if (lockActionStatesConfirmed.value) {\n    emit('success', lockActionStates);\n  }\n});\n\n/**\n * LIFECYCLE\n */\nonBeforeMount(async () => {\n  const approvalActions = await getTokenApprovalActions({\n    amountsToApprove: amountsToApprove.value,\n    spender: networkConfig.addresses.veBAL,\n    actionType: ApprovalAction.Locking,\n    // veBAL approval should always only suggest the approval of the exact amount.\n    forceMax: false,\n  });\n  actions.value.unshift(...approvalActions);\n  isLoadingApprovals.value = false;\n});\n</script>\n\n<template>\n  <div>\n    <BalActionSteps\n      v-if=\"!lockActionStatesConfirmed\"\n      :actions=\"actions\"\n      :isLoading=\"isLoadingApprovals\"\n      :disabled=\"isMismatchedNetwork\"\n      primaryActionType=\"extendLock\"\n    />\n    <template v-else>\n      <div\n        v-for=\"(lockActionState, i) in lockActionStates\"\n        :key=\"i\"\n        class=\"flex justify-between items-center mt-4 text-sm text-gray-400 dark:text-gray-600\"\n      >\n        <div class=\"flex items-center\">\n          <BalIcon name=\"clock\" />\n          <span class=\"ml-2\">\n            {{ lockActionState.confirmedAt }}\n          </span>\n        </div>\n        <BalLink\n          v-if=\"lockActionState.receipt\"\n          :href=\"explorerLinks.txLink(lockActionState.receipt.transactionHash)\"\n          external\n          noStyle\n          class=\"group flex items-center\"\n        >\n          {{ networkConfig.explorerName }}\n          <BalIcon\n            name=\"arrow-up-right\"\n            size=\"sm\"\n            class=\"ml-px group-hover:text-pink-500 transition-colors\"\n          />\n        </BalLink>\n      </div>\n      <BalAlert\n        v-if=\"lockConfirmed && !veBalLockInfo.hasExistingLock\"\n        class=\"mt-4\"\n        type=\"tip\"\n        :title=\"t('getVeBAL.previewModal.firstVeBALReceived.title')\"\n        :description=\"t('getVeBAL.previewModal.firstVeBALReceived.description')\"\n      >\n      </BalAlert>\n      <BalAlert\n        v-else-if=\"shouldResubmitVotes\"\n        class=\"mt-4\"\n        type=\"warning\"\n        :title=\"t('veBAL.liquidityMining.resubmit.hint.title')\"\n        :description=\"t('veBAL.liquidityMining.resubmit.hint.description')\"\n      >\n      </BalAlert>\n      <BalBtn\n        tag=\"router-link\"\n        :to=\"{ name: 'vebal', params: { networkSlug } }\"\n        color=\"gray\"\n        outline\n        block\n        class=\"mt-4\"\n      >\n        {{ $t('getVeBAL.previewModal.returnToVeBalPage') }}\n      </BalBtn>\n      <transition name=\"pop\">\n        <FeedbackCard class=\"mt-3\" />\n      </transition>\n    </template>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { Pool } from '@/services/pool/types';\nimport { PoolToken } from '@feeless/sdk';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  totalLpTokens: string;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { getToken } = useTokens();\nconst { fNum } = useNumbers();\n\n/**\n * COMPUTED\n */\nconst poolWeightsLabel = computed(() =>\n  props.lockablePool.tokens\n    .map(token => {\n      const weightLabel = formatWeightLabel(token.weight);\n      const symbol = token.symbol ?? getToken(token.address).symbol;\n\n      return `${weightLabel} ${symbol}`;\n    })\n    .join(' / ')\n);\n\n/**\n * METHODS\n */\nfunction formatWeightLabel(weight: PoolToken['weight']) {\n  return fNum(weight || '0', {\n    style: 'percent',\n    maximumFractionDigits: 0,\n  });\n}\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"flex justify-between items-center p-3\">\n      <div>\n        <div class=\"font-semibold\">\n          {{\n            $t('getVeBAL.previewModal.lpTokens', [\n              fNum(totalLpTokens, FNumFormats.token),\n            ])\n          }}\n        </div>\n        <div class=\"text-gray-400 dark:text-gray-600\">\n          {{ poolWeightsLabel }}\n        </div>\n      </div>\n      <div class=\"grid grid-cols-2 gap-1\">\n        <BalAsset\n          v-for=\"tokenAddress in lockablePool.tokensList\"\n          :key=\"tokenAddress\"\n          :address=\"tokenAddress\"\n          :size=\"30\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.container {\n  @apply shadow-lg border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport useVeBal from '@/composables/useVeBAL';\n\n/**\n * TYPES\n */\ntype Props = {\n  totalLpTokens: string;\n  lockEndDate: string;\n  expectedVeBalAmount: string;\n};\n\n/**\n * PROPS\n */\ndefineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { veBalTokenInfo } = useVeBal();\nconst { t } = useI18n();\n\n/**\n * COMPUTED\n */\nconst conversationTableRows = computed(() => [\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.1y'),\n    value: `~1 ${veBalTokenInfo.value?.symbol}`,\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.6m'),\n    value: `~0.5 ${veBalTokenInfo.value?.symbol}`,\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.3m'),\n    value: `~0.25 ${veBalTokenInfo.value?.symbol}`,\n  },\n]);\n</script>\n\n<template>\n  <BalTooltip width=\"72\" noPad class=\"ml-2\">\n    <template #activator>\n      <BalIcon name=\"info\" size=\"sm\" class=\"text-secondary\" />\n    </template>\n    <div class=\"text-sm divide-y dark:divide-gray-900\">\n      <div class=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-t\">\n        <h5>\n          {{ fNum(expectedVeBalAmount, FNumFormats.token) }}\n          {{ veBalTokenInfo?.symbol }}\n        </h5>\n      </div>\n      <div class=\"p-3\">\n        <div class=\"mb-3 text-secondary\">\n          {{\n            $t(\n              'getVeBAL.previewModal.summary.totalVotingEscrowTooltip.explainer'\n            )\n          }}\n        </div>\n        <div class=\"flex items-center mb-1 whitespace-nowrap\">\n          <table class=\"w-full table-fixed\">\n            <thead>\n              <tr>\n                <th class=\"table-header-cell\">\n                  {{\n                    $t(\n                      'getVeBAL.previewModal.summary.totalVotingEscrowTooltip.table.lockPeriod'\n                    )\n                  }}\n                </th>\n                <th class=\"table-header-cell\">\n                  {{\n                    $t(\n                      'getVeBAL.previewModal.summary.totalVotingEscrowTooltip.table.totalVeBAL'\n                    )\n                  }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, i) in conversationTableRows\" :key=\"i\">\n                <td class=\"table-body-cell\">\n                  {{ row.label }}\n                </td>\n                <td class=\"table-body-cell\">\n                  {{ row.value }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </BalTooltip>\n</template>\n\n<style scoped>\n.table-header-cell {\n  @apply border dark:border-gray-700 p-2 text-left;\n}\n\n.table-body-cell {\n  @apply border dark:border-gray-700 p-2;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { format } from 'date-fns';\nimport { computed } from 'vue';\n\nimport { PRETTY_DATE_FORMAT } from '@/components/forms/lock_actions/constants';\nimport { LockType } from '@/components/forms/lock_actions/LockForm/types';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport useVeBal from '@/composables/useVeBAL';\nimport { bnum } from '@/lib/utils';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { Pool } from '@/services/pool/types';\n\nimport VeBalTooltipExplainer from './VeBalTooltipExplainer.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  totalLpTokens: string;\n  lockEndDate: string;\n  lockAmount: string;\n  expectedVeBalAmount: string;\n  lockType: LockType[];\n  veBalLockInfo: VeBalLockInfo;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { veBalTokenInfo } = useVeBal();\n\n/**\n * COMPUTED\n */\nconst poolShares = computed(() =>\n  bnum(props.lockablePool.totalLiquidity).div(props.lockablePool.totalShares)\n);\n\nconst fiatTotalLockedAmount = computed(() =>\n  poolShares.value.times(props.veBalLockInfo.lockedAmount).toString()\n);\n\nconst fiatTotalLockAmount = computed(() =>\n  poolShares.value.times(props.lockAmount).toString()\n);\n\nconst fiatTotalLpTokens = computed(() =>\n  poolShares.value.times(props.totalLpTokens).toString()\n);\n\nconst isExtendLockOnly = computed(\n  () =>\n    props.lockType.length === 1 && props.lockType.includes(LockType.EXTEND_LOCK)\n);\n\nconst isIncreaseLockOnly = computed(\n  () =>\n    props.lockType.length === 1 &&\n    props.lockType.includes(LockType.INCREASE_LOCK)\n);\n\n// const fiatWeeklyYield = computed(() => '0');\n</script>\n\n<template>\n  <div class=\"summary-table\">\n    <h6 class=\"p-2\">\n      {{ $t('getVeBAL.previewModal.summary.title') }}\n    </h6>\n    <div class=\"p-2\">\n      <div class=\"summary-item-row\">\n        <div>\n          {{\n            isExtendLockOnly || isIncreaseLockOnly\n              ? $t('getVeBAL.previewModal.summary.totalAlreadyLocked')\n              : $t('getVeBAL.previewModal.summary.totalToLock')\n          }}\n        </div>\n        <div>\n          {{\n            fNum(\n              isIncreaseLockOnly ? fiatTotalLockedAmount : fiatTotalLpTokens,\n              FNumFormats.fiat\n            )\n          }}\n        </div>\n      </div>\n      <div v-if=\"isIncreaseLockOnly\" class=\"summary-item-row\">\n        <div>\n          {{ $t('getVeBAL.previewModal.summary.increasedLockAmount') }}\n        </div>\n        <div>{{ fNum(fiatTotalLockAmount, FNumFormats.fiat) }}</div>\n      </div>\n      <div class=\"summary-item-row\">\n        <div>\n          {{\n            isExtendLockOnly\n              ? $t('getVeBAL.previewModal.summary.newLockEndDate')\n              : $t('getVeBAL.previewModal.summary.lockEndDate')\n          }}\n        </div>\n        <div>{{ format(new Date(lockEndDate), PRETTY_DATE_FORMAT) }}</div>\n      </div>\n      <div class=\"summary-item-row\">\n        <div>{{ $t('getVeBAL.previewModal.summary.totalVotingEscrow') }}</div>\n        <div class=\"flex items-center\">\n          {{ fNum(expectedVeBalAmount, FNumFormats.token) }}\n          {{ veBalTokenInfo?.symbol }}\n          <VeBalTooltipExplainer\n            :expectedVeBalAmount=\"expectedVeBalAmount\"\n            :lockEndDate=\"lockEndDate\"\n            :totalLpTokens=\"totalLpTokens\"\n          />\n        </div>\n      </div>\n      <!-- <div class=\"summary-item-row\">\n        <div>\n          {{ $t('getVeBAL.previewModal.summary.potentialWeeklyYield') }}\n        </div>\n        <div>{{ fNum(fiatWeeklyYield, FNumFormats.fiat) }}</div>\n      </div> -->\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.summary-table {\n  @apply border dark:border-gray-700 divide-y dark:divide-gray-700 rounded-lg mt-4;\n}\n\n.summary-item-row {\n  @apply flex justify-between pb-2;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { LockType } from '@/components/forms/lock_actions/LockForm/types';\nimport useVeBalLockInfoQuery from '@/composables/queries/useVeBalLockInfoQuery';\nimport { expectedVeBal } from '@/composables/useVeBAL';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { Pool } from '@/services/pool/types';\nimport { TokenInfo } from '@/types/TokenList';\n\nimport useLockState from '../../composables/useLockState';\nimport LockActions from './components/LockActions.vue';\nimport LockAmount from './components/LockAmount.vue';\nimport LockSummary from './components/LockSummary.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n  lockAmount: string;\n  lockEndDate: string;\n  lockType: LockType[];\n  veBalLockInfo: VeBalLockInfo;\n  totalLpTokens: string;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\nconst emit = defineEmits<{\n  (e: 'close'): void;\n}>();\n\n/**\n * STATE\n */\nconst lockConfirmed = ref(false);\nconst lockablePool = ref(props.lockablePool);\nconst lockablePoolTokenInfo = ref(props.lockablePoolTokenInfo);\nconst lockAmount = ref(props.lockAmount);\nconst lockEndDate = ref(props.lockEndDate);\nconst lockType = ref(props.lockType);\nconst veBalLockInfo = ref(props.veBalLockInfo);\nconst totalLpTokens = ref(props.totalLpTokens);\n\n// This value should be static when modal is opened.\nconst expectedVeBalAmount = expectedVeBal(\n  totalLpTokens.value,\n  lockEndDate.value\n);\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\nconst { refetch: refetchLockInfo } = useVeBalLockInfoQuery();\nconst { resetState } = useLockState();\n\n/**\n * COMPUTED\n */\nconst title = computed(() => {\n  if (lockType.value.length === 1) {\n    return lockConfirmed.value\n      ? t(`getVeBAL.previewModal.titles.${lockType.value[0]}.confirmed`)\n      : t(`getVeBAL.previewModal.titles.${lockType.value[0]}.default`);\n  }\n  return lockConfirmed.value\n    ? t(`getVeBAL.previewModal.titles.${LockType.CREATE_LOCK}.confirmed`)\n    : t(`getVeBAL.previewModal.titles.${LockType.CREATE_LOCK}.default`);\n});\n\n/**\n * METHODS\n */\nfunction handleClose() {\n  emit('close');\n}\n\nfunction handleSuccess() {\n  lockConfirmed.value = true;\n  refetchLockInfo();\n  resetState();\n}\n</script>\n\n<template>\n  <BalModal show :fireworks=\"lockConfirmed\" @close=\"handleClose\">\n    <template #header>\n      <div class=\"flex items-center\">\n        <BalCircle\n          v-if=\"lockConfirmed\"\n          size=\"8\"\n          color=\"green\"\n          class=\"mr-2 text-white\"\n        >\n          <BalIcon name=\"check\" />\n        </BalCircle>\n        <h4>\n          {{ title }}\n        </h4>\n      </div>\n    </template>\n\n    <LockAmount :lockablePool=\"lockablePool\" :totalLpTokens=\"totalLpTokens\" />\n\n    <LockSummary\n      :lockablePool=\"lockablePool\"\n      :totalLpTokens=\"totalLpTokens\"\n      :lockAmount=\"lockAmount\"\n      :lockEndDate=\"lockEndDate\"\n      :expectedVeBalAmount=\"expectedVeBalAmount\"\n      :lockType=\"lockType\"\n      :veBalLockInfo=\"veBalLockInfo\"\n    />\n    <LockActions\n      :veBalLockInfo=\"veBalLockInfo\"\n      :lockConfirmed=\"lockConfirmed\"\n      :lockAmount=\"lockAmount\"\n      :lockEndDate=\"lockEndDate\"\n      :lockType=\"lockType\"\n      :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n      class=\"mt-4\"\n      @success=\"handleSuccess\"\n    />\n  </BalModal>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport TokenInput from '@/components/inputs/TokenInput/TokenInput.vue';\nimport { bnum } from '@/lib/utils';\nimport { Pool } from '@/services/pool/types';\nimport { TokenInfo } from '@/types/TokenList';\n\nimport useLockState from '../../../composables/useLockState';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { lockAmount } = useLockState();\n\n/**\n * COMPUTED\n */\nconst lockAmountFiatValue = computed(() =>\n  bnum(props.lockablePool.totalLiquidity)\n    .div(props.lockablePool.totalShares)\n    .times(lockAmount.value)\n    .toString()\n);\n</script>\n\n<template>\n  <div class=\"mb-6\">\n    <div>\n      <p class=\"pb-2 font-semibold\">\n        {{ $t('getVeBAL.lockForm.lockAmount.title') }}\n      </p>\n    </div>\n    <TokenInput\n      v-model:amount=\"lockAmount\"\n      :address=\"lockablePoolTokenInfo.address\"\n      :tokenValue=\"lockAmountFiatValue\"\n      fixedToken\n      name=\"lockAmount\"\n    />\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { addWeeks, format } from 'date-fns';\nimport { computed, onBeforeMount } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { INPUT_DATE_FORMAT } from '@/components/forms/lock_actions/constants';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\n\nimport useLockState from '../../../composables/useLockState';\n\n/**\n * TYPES\n */\ntype Props = {\n  minLockEndDateTimestamp: number;\n  maxLockEndDateTimestamp: number;\n  veBalLockInfo?: VeBalLockInfo | null;\n};\n\n/**\n * COMPOSABLES\n */\n\nconst { t } = useI18n();\n\n/**\n * PROPS\n */\nconst props = withDefaults(defineProps<Props>(), {\n  veBalLockInfo: null,\n});\n/**\n * STATE\n */\nconst { lockEndDate } = useLockState();\n\n/**\n * COMPUTED\n */\nconst lockDates = computed(() => [\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.2w'),\n    action: () => updateLockEndDate(props.minLockEndDateTimestamp),\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.1m'),\n    action: () =>\n      updateLockEndDate(addWeeks(props.minLockEndDateTimestamp, 4).getTime()),\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.3m'),\n    action: () =>\n      updateLockEndDate(addWeeks(props.minLockEndDateTimestamp, 12).getTime()),\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.6m'),\n    action: () =>\n      updateLockEndDate(addWeeks(props.minLockEndDateTimestamp, 24).getTime()),\n  },\n  {\n    label: t('getVeBAL.lockForm.lockPeriods.1y'),\n    action: () => {\n      lockEndDate.value = formatDateInput(props.maxLockEndDateTimestamp);\n    },\n  },\n]);\n\n/**\n * CALLBACKS\n */\nonBeforeMount(() => {\n  lockEndDate.value = props.veBalLockInfo?.hasExistingLock\n    ? formatDateInput(props.veBalLockInfo.lockedEndDate)\n    : formatDateInput(props.maxLockEndDateTimestamp);\n});\n\n/**\n * METHODS\n */\nfunction updateLockEndDate(timestamp: number) {\n  lockEndDate.value = formatDateInput(\n    Math.min(timestamp, props.maxLockEndDateTimestamp)\n  );\n}\n\nfunction formatDateInput(date: Date | number) {\n  return format(date, INPUT_DATE_FORMAT);\n}\n</script>\n\n<template>\n  <div class=\"mb-6\">\n    <div>\n      <p class=\"pb-2 font-semibold\">\n        {{ $t('getVeBAL.lockForm.lockEndDate.title') }}\n      </p>\n    </div>\n    <BalTextInput\n      v-model=\"lockEndDate\"\n      name=\"lockEndDate\"\n      type=\"date\"\n      :min=\"formatDateInput(minLockEndDateTimestamp)\"\n      :max=\"formatDateInput(maxLockEndDateTimestamp)\"\n      step=\"7\"\n    />\n    <div class=\"flex px-1 mt-2 text-sm text-secondary\">\n      <div\n        v-for=\"(lockDate, index) in lockDates\"\n        :key=\"index\"\n        class=\"mr-3 hover:text-pink-500 focus:text-pink-500 cursor-pointer\"\n        @click=\"lockDate.action\"\n      >\n        ~{{ lockDate.label }}\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport useVeBal from '@/composables/useVeBAL';\n\n/**\n * TYPES\n */\ntype Props = {\n  expectedVeBalAmount: string;\n};\n\n/**\n * PROPS\n */\ndefineProps<Props>();\n\n/**\n * COMPOSABLES\n */\nconst { fNum } = useNumbers();\nconst { veBalTokenInfo } = useVeBal();\n</script>\n\n<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div>{{ $t('getVeBAL.lockForm.summary.receive.title') }}</div>\n      <div>\n        {{\n          expectedVeBalAmount != null\n            ? fNum(expectedVeBalAmount, FNumFormats.token)\n            : '-'\n        }}\n        {{ veBalTokenInfo?.symbol }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.container {\n  @apply border dark:border-gray-800 bg-gray-50 dark:bg-gray-800 divide-y dark:divide-gray-850 rounded-lg text-sm;\n}\n\n.row {\n  @apply p-3 flex justify-between;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, ref, toRef } from 'vue';\n\nimport { LockType } from '@/components/forms/lock_actions/LockForm/types';\nimport { useTokens } from '@/providers/tokens.provider';\nimport { expectedVeBal } from '@/composables/useVeBAL';\nimport { bnum } from '@/lib/utils';\nimport { VeBalLockInfo } from '@/services/balancer/contracts/contracts/veBAL';\nimport { configService } from '@/services/config/config.service';\nimport { Pool } from '@/services/pool/types';\nimport useWeb3 from '@/services/web3/useWeb3';\nimport { TokenInfo } from '@/types/TokenList';\n\nimport useLockAmount from '../../composables/useLockAmount';\nimport useLockEndDate from '../../composables/useLockEndDate';\nimport useLockState from '../../composables/useLockState';\nimport LockPreviewModal from '../LockPreviewModal/LockPreviewModal.vue';\nimport LockAmount from './components/LockAmount.vue';\nimport LockEndDate from './components/LockEndDate.vue';\nimport Summary from './components/Summary.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  lockablePool: Pool;\n  lockablePoolTokenInfo: TokenInfo;\n  veBalLockInfo?: VeBalLockInfo;\n};\n\n/**\n * PROPS\n */\nconst props = defineProps<Props>();\n\n/**\n * STATE\n */\nconst showPreviewModal = ref(false);\n\nconst { lockEndDate, lockAmount } = useLockState();\nconst { isWalletReady, startConnectWithInjectedProvider, isMismatchedNetwork } =\n  useWeb3();\n\nconst { isValidLockAmount, isIncreasedLockAmount, totalLpTokens } =\n  useLockAmount(toRef(props, 'veBalLockInfo'));\n\nconst {\n  minLockEndDateTimestamp,\n  maxLockEndDateTimestamp,\n  isValidLockEndDate,\n  isExtendedLockEndDate,\n} = useLockEndDate(props.veBalLockInfo);\n\n/**\n * COMPOSABLES\n */\nconst { balanceFor } = useTokens();\n\n/**\n * COMPUTED\n */\nconst lockablePoolBptBalance = computed(() =>\n  balanceFor(props.lockablePool.address)\n);\n\nconst submissionDisabled = computed(() => {\n  if (isMismatchedNetwork.value) {\n    return true;\n  }\n\n  const lockableAmount = bnum(lockablePoolBptBalance.value || '0');\n  const toLockAmount = bnum(lockAmount.value || '0');\n\n  if (toLockAmount.isGreaterThan(lockableAmount)) {\n    return true;\n  }\n\n  if (props.veBalLockInfo?.hasExistingLock && !props.veBalLockInfo?.isExpired) {\n    return !isIncreasedLockAmount.value && !isExtendedLockEndDate.value;\n  }\n\n  return (\n    !lockableAmount.gt(0) ||\n    !isValidLockAmount.value ||\n    !isValidLockEndDate.value\n  );\n});\n\nconst expectedVeBalAmount = computed(() => {\n  if (submissionDisabled.value) {\n    return '0';\n  }\n\n  return expectedVeBal(totalLpTokens.value, lockEndDate.value);\n});\n\nconst lockType = computed(() => {\n  if (props.veBalLockInfo?.hasExistingLock && !props.veBalLockInfo?.isExpired) {\n    if (isIncreasedLockAmount.value && isExtendedLockEndDate.value) {\n      return [LockType.INCREASE_LOCK, LockType.EXTEND_LOCK];\n    }\n    if (isExtendedLockEndDate.value) {\n      return [LockType.EXTEND_LOCK];\n    }\n    if (isIncreasedLockAmount.value) {\n      return [LockType.INCREASE_LOCK];\n    }\n  }\n  return [LockType.CREATE_LOCK];\n});\n\n/**\n * METHODS\n */\nfunction handleClosePreviewModal() {\n  showPreviewModal.value = false;\n}\n\nfunction handleShowPreviewModal() {\n  if (submissionDisabled.value) return;\n  showPreviewModal.value = true;\n}\n</script>\n\n<template>\n  <BalCard shadow=\"xl\" exposeOverflow noBorder>\n    <template #header>\n      <div class=\"w-full\">\n        <div class=\"pb-1.5 text-xs leading-none text-secondary\">\n          {{ configService.network.chainName }}\n        </div>\n        <div class=\"flex justify-between items-center\">\n          <h4>\n            {{ $t('getVeBAL.lockForm.title') }}\n          </h4>\n        </div>\n      </div>\n    </template>\n\n    <LockAmount\n      :lockablePool=\"lockablePool\"\n      :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n    />\n\n    <LockEndDate\n      :minLockEndDateTimestamp=\"minLockEndDateTimestamp\"\n      :maxLockEndDateTimestamp=\"maxLockEndDateTimestamp\"\n      :veBalLockInfo=\"veBalLockInfo\"\n    />\n\n    <Summary :expectedVeBalAmount=\"expectedVeBalAmount\" />\n\n    <div class=\"mt-6\">\n      <BalBtn\n        v-if=\"!isWalletReady\"\n        :label=\"$t('connectWallet')\"\n        color=\"gradient\"\n        block\n        @click=\"startConnectWithInjectedProvider\"\n      />\n      <BalBtn\n        v-else\n        color=\"gradient\"\n        block\n        :disabled=\"submissionDisabled\"\n        @click=\"handleShowPreviewModal\"\n      >\n        {{ $t('preview') }}\n      </BalBtn>\n    </div>\n  </BalCard>\n  <teleport to=\"#modal\">\n    <LockPreviewModal\n      v-if=\"showPreviewModal && veBalLockInfo\"\n      :lockablePool=\"lockablePool\"\n      :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n      :lockAmount=\"lockAmount\"\n      :lockEndDate=\"lockEndDate\"\n      :lockType=\"lockType\"\n      :veBalLockInfo=\"veBalLockInfo\"\n      :totalLpTokens=\"totalLpTokens\"\n      @close=\"handleClosePreviewModal\"\n    />\n  </teleport>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\nimport Col3Layout from '@/components/layouts/Col3Layout.vue';\nimport usePoolQuery from '@/composables/queries/usePoolQuery';\nimport useVeBalLockInfoQuery from '@/composables/queries/useVeBalLockInfoQuery';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport { useTokens } from '@/providers/tokens.provider';\nimport useVeBal from '@/composables/useVeBAL';\nimport { Pool } from '@/services/pool/types';\nimport useWeb3 from '@/services/web3/useWeb3';\n\nimport HowToLock from './components/HowToLock.vue';\nimport LockableTokens from './components/LockableTokens.vue';\nimport MyVeBAL from './components/MyVeBAL.vue';\nimport VeBalForm from './components/VeBalForm/VeBalForm.vue';\n\n/**\n * COMPOSABLES\n */\nconst { getToken } = useTokens();\nconst { isWalletReady } = useWeb3();\nconst { lockablePoolId } = useVeBal();\nconst { isDesktop, isMobile } = useBreakpoints();\n\n/**\n * QUERIES\n */\nconst lockablePoolQuery = usePoolQuery(lockablePoolId.value as string);\nconst veBalLockInfoQuery = useVeBalLockInfoQuery();\n\n/**\n * COMPUTED\n */\nconst lockablePoolLoading = computed(() => lockablePoolQuery.isLoading.value);\n\nconst veBalQueryLoading = computed(() => veBalLockInfoQuery.isLoading.value);\n\nconst lockablePool = computed<Pool | undefined>(\n  () => lockablePoolQuery.data.value\n);\n\nconst lockablePoolTokenInfo = computed(() =>\n  lockablePool.value != null ? getToken(lockablePool.value.address) : null\n);\n\nconst veBalLockInfo = computed(() => veBalLockInfoQuery.data.value);\n\nconst isLoading = computed(() =>\n  isWalletReady.value\n    ? lockablePoolLoading.value || veBalQueryLoading.value\n    : lockablePoolLoading.value\n);\n</script>\n\n<template>\n  <Col3Layout offsetGutters>\n    <template #gutterLeft>\n      <BalLoadingBlock\n        v-if=\"isLoading || !lockablePool || !lockablePoolTokenInfo\"\n        class=\"h-36\"\n      />\n      <LockableTokens\n        v-else\n        :lockablePool=\"lockablePool\"\n        :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n      />\n      <template v-if=\"isDesktop\">\n        <BalLoadingBlock\n          v-if=\"isLoading || !lockablePool || !lockablePoolTokenInfo\"\n          class=\"mt-4 h-12\"\n        />\n        <HowToLock\n          v-else\n          :lockablePool=\"lockablePool\"\n          :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n        />\n      </template>\n    </template>\n\n    <BalLoadingBlock\n      v-if=\"isLoading || !lockablePool || !lockablePoolTokenInfo\"\n      class=\"h-96\"\n    />\n    <VeBalForm\n      v-else\n      :lockablePool=\"lockablePool\"\n      :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n      :veBalLockInfo=\"veBalLockInfo\"\n    />\n\n    <template #gutterRight>\n      <BalLoadingBlock v-if=\"isLoading\" class=\"h-64\" />\n      <MyVeBAL v-else :veBalLockInfo=\"veBalLockInfo\" />\n      <template v-if=\"isMobile\">\n        <BalLoadingBlock\n          v-if=\"isLoading || !lockablePool || !lockablePoolTokenInfo\"\n          class=\"mt-4 h-12\"\n        />\n        <HowToLock\n          v-else\n          :lockablePool=\"lockablePool\"\n          :lockablePoolTokenInfo=\"lockablePoolTokenInfo\"\n        />\n      </template>\n    </template>\n  </Col3Layout>\n</template>\n"],"names":["addWeeks","dirtyDate","dirtyAmount","requiredArgs","amount","toInteger","days","addDays","isThursday","toDate","previousDay","date","day","delta","getDay","subDays","previousThursday","props","__props","t","useI18n","networkSlug","useNetwork","steps","computed","balanceFor","useTokens","fNum","useNumbers","bptBalance","fiatTotal","bnum","LockType","state","reactive","resetState","useLockState","toRefs","useLockAmount","veBalLockInfo","lockAmount","isValidLockAmount","isIncreasedLockAmount","_a","totalLpTokens","getMaxLockEndDateTimestamp","maxLockTimestamp","MAX_LOCK_PERIOD_IN_DAYS","timestamp","startOfDay","useLockEndDate","todaysDate","toUtcTime","minLockEndDateTimestamp","nextThursday","MIN_LOCK_PERIOD_IN_DAYS","maxLockEndDateTimestamp","lockEndDate","lockEndDateTimestamp","isValidLockEndDate","isExtendedLockEndDate","emit","__emit","isLoadingApprovals","ref","lockActionStates","networkConfig","useConfig","getProvider","explorerLinks","isMismatchedNetwork","useWeb3","addTransaction","useTransactions","txListener","getTxConfirmedAt","useEthers","totalVotes","unallocatedVotes","useVotingPools","getTokenApprovalActions","useTokenApprovalActions","refetchSyncData","useCrossChainSync","lockActions","lockType","actionIndex","format","PRETTY_DATE_FORMAT","submit","actions","lockActionStatesConfirmed","lockActionState","shouldResubmitVotes","amountsToApprove","handleTransaction","tx","FNumFormats","receipt","confirmedAt","dateTimeLabelFor","balancerContractsService","error","captureBalancerException","watch","onBeforeMount","approvalActions","ApprovalAction","getToken","poolWeightsLabel","token","weightLabel","formatWeightLabel","symbol","weight","veBalTokenInfo","useVeBal","conversationTableRows","_b","_c","poolShares","fiatTotalLockedAmount","fiatTotalLockAmount","fiatTotalLpTokens","isExtendLockOnly","isIncreaseLockOnly","lockConfirmed","lockablePool","lockablePoolTokenInfo","expectedVeBalAmount","expectedVeBal","refetchLockInfo","useVeBalLockInfoQuery","title","handleClose","handleSuccess","lockAmountFiatValue","lockDates","updateLockEndDate","formatDateInput","INPUT_DATE_FORMAT","showPreviewModal","isWalletReady","startConnectWithInjectedProvider","toRef","lockablePoolBptBalance","submissionDisabled","lockableAmount","handleClosePreviewModal","handleShowPreviewModal","lockablePoolId","isDesktop","isMobile","useBreakpoints","lockablePoolQuery","usePoolQuery","veBalLockInfoQuery","lockablePoolLoading","veBalQueryLoading","isLoading"],"mappings":"grDAqBe,SAASA,GAASC,EAAWC,EAAa,CACvDC,EAAa,EAAG,SAAS,EACzB,IAAIC,EAASC,GAAUH,CAAW,EAC9BI,EAAOF,EAAS,EACpB,OAAOG,GAAQN,EAAWK,CAAI,CAChC,CCPe,SAASE,GAAWP,EAAW,CAC5C,OAAAE,EAAa,EAAG,SAAS,EAClBM,GAAOR,CAAS,EAAE,OAAM,IAAO,CACxC,CCIe,SAASS,GAAYC,EAAMC,EAAK,CAC7CT,EAAa,EAAG,SAAS,EACzB,IAAIU,EAAQC,GAAOH,CAAI,EAAIC,EAC3B,OAAIC,GAAS,IAAGA,GAAS,GAClBE,GAAQJ,EAAME,CAAK,CAC5B,CCZe,SAASG,GAAiBL,EAAM,CAC7C,OAAAR,EAAa,EAAG,SAAS,EAClBO,GAAYC,EAAM,CAAC,CAC5B,qVCFA,MAAAM,EAAAC,EAKA,CAAA,EAAAC,GAAAC,IACA,CAAA,YAAAC,GAAAC,KAKAC,EAAAC,EAAA,IAAA,CAA6BL,EAAA,gCAAA,CAAAF,EAAA,sBAAA,MAAA,CAAA,EAC4CE,EAAA,+BAAA,EACtCA,EAAA,gCAAA,CACC,CAAA,opCCXpC,MAAAF,EAAAC,EAKA,CAAA,WAAAO,GAAAC,KACA,CAAA,KAAAC,GAAAC,IACA,CAAA,YAAAP,GAAAC,KAKAO,EAAAL,EAAA,IAAAC,EAAAR,EAAA,aAAA,OAAA,CAAA,EAEAa,EAAAN,EAAkB,IAAAO,EAAAd,EAAA,aAAA,cAAA,EAAA,IAAAA,EAAA,aAAA,WAAA,EAAA,MAAAY,EAAA,KAAA,EAAA,SAAA,CAIJ,4oBCzCF,IAAAG,GAAAA,IACVA,EAAA,YAAc,aACdA,EAAA,YAAc,aACdA,EAAA,cAAgB,eAHNA,IAAAA,GAAA,CAAA,CAAA,ECUZ,MAAMC,GAAQC,GAAoB,CAChC,WAAY,GACZ,YAAa,EACf,CAAC,EAKD,SAASC,IAAmB,CAC1BF,GAAM,WAAa,EACrB,CAEA,SAAwBG,GAAe,CAC9B,MAAA,CACL,GAAGC,GAAOJ,EAAK,EACf,WAAAE,EAAA,CAEJ,CCpBA,SAAwBG,GACtBC,EACA,CAIM,KAAA,CAAE,WAAAC,GAAeJ,IAKjBK,EAAoBjB,EAAS,IAAMO,EAAKS,EAAW,OAAS,GAAG,EAAE,GAAG,CAAC,CAAC,EAEtEE,EAAwBlB,EAC5B,IAAA,OAAM,QAAAmB,EAAAJ,GAAA,YAAAA,EAAe,QAAf,YAAAI,EAAsB,kBAAmBF,EAAkB,MAAA,EAG7DG,EAAgBpB,EAAS,IAAM,OACnC,OAAOmB,EAAAJ,GAAA,YAAAA,EAAe,QAAf,MAAAI,EAAsB,gBACzBZ,EAAKQ,EAAc,MAAM,YAAY,EAClC,KAAKC,EAAW,OAAS,GAAG,EAC5B,SAAS,EACZA,EAAW,OAAS,GAAA,CACzB,EAEM,MAAA,CAEL,kBAAAC,EACA,sBAAAC,EACA,cAAAE,CAAA,CAEJ,CCpBA,SAASC,GAA2BlC,EAAc,CAC1C,MAAAmC,EAAmBvC,GAAQI,EAAMoC,EAAuB,EAExDC,EAAYxC,GAAWsC,CAAgB,EACzCA,EACA9B,GAAiB8B,CAAgB,EAE9B,OAAAG,GAAWD,CAAS,EAAE,SAC/B,CAEA,SAAwBE,GAAeX,EAA+B,CAIpE,MAAMY,EAAaC,GAAc,IAAA,IAAM,EAEjCC,EAA0BJ,GAC9BK,GACE/C,GACEgC,GAAA,MAAAA,EAAe,gBACXA,EAAc,cACdY,EACJI,EACF,CACF,GACA,QAAQ,EAEJC,EAA0BX,GAA2BM,CAAU,EAK/D,CAAE,YAAAM,GAAgBrB,IAKlBsB,EAAuBlC,EAAS,IACpCiC,EAAY,QAAU,GAClB,EACAR,GAAW,IAAI,KAAKQ,EAAY,KAAK,CAAC,EAAE,QAAQ,CAAA,EAGhDE,EAAqBnC,EACzB,IACEkC,EAAqB,OAASL,GAC9BK,EAAqB,OAASF,CAAA,EAG5BI,EAAwBpC,EAC5B,KAAMe,GAAA,YAAAA,EAAe,kBAAmBoB,EAAmB,KAAA,EAGtD,MAAA,CAEL,WAAAR,EAGA,wBAAAE,EACA,wBAAAG,EACA,mBAAAG,EACA,sBAAAC,CAAA,CAEJ,+OC7BA,MAAA3C,EAAAC,EAEA2C,EAAAC,EAOAC,EAAAC,EAAA,EAAA,EACAC,EAAA/B,GAAyBjB,EAAA,SAAA,IAAA,KAAA,CACG,KAAA,GAClB,WAAA,GACM,UAAA,GACD,YAAA,EACE,EAAA,CACb,EAMJ,CAAA,EAAAE,GAAAC,IACA,CAAA,cAAA8C,GAAAC,KACA,CAAA,YAAAC,EAAA,cAAAC,EAAA,oBAAAC,CAAA,EAAAC,GAAA,EACA,CAAA,eAAAC,GAAAC,KACA,CAAA,WAAAC,EAAA,iBAAAC,CAAA,EAAAC,GAAA,EACA,CAAA,KAAAjD,GAAAC,IACA,CAAA,WAAAiD,EAAA,iBAAAC,CAAA,EAAAC,GAAA,EACA,CAAA,YAAA1D,GAAAC,KACA,CAAA,wBAAA0D,GAAAC,KACA,CAAA,QAAAC,CAAA,EAAAC,GAAA,EAEAC,EAAAnE,EAAA,SAAA,IAAA,CAAAoE,EAAAC,KAAA,CAAmE,MAAAnE,EAAA,iCAAAkE,CAAA,SAAA,CACLE,EAAA,IAAA,KAAAtE,EAAA,WAAA,EAAAuE,EAAA,CACJ,CAAA,EACvD,aAAArE,EAAA,iCAAAkE,CAAA,eAAA,EACuE,gBAAAlE,EAAA,iCAAAkE,CAAA,aAAA,EACC,OAAA,IAAAI,GAAAJ,EAAAC,CAAA,EAC/B,YAAAnE,EAAA,iCAAAkE,CAAA,UAAA,CACwB,EAAA,EAGpEK,EAAA1B,EAAA,CAAA,GAAAoB,CAAA,CAAA,EAKAO,EAAAnE,EAAkC,IAAAyC,EAAA,MAAA2B,GAAAA,EAAA,SAAA,CACmC,EAGrEC,EAAArE,EAA4B,IAAAqD,IAAAC,EAAA,KACY,EAGxCgB,EAAAtE,EAAA,IAAA,CAAwC,CACtC,QAAAP,EAAA,sBAAA,QACuC,OAAAA,EAAA,UACvB,CAChB,CAAA,EAMF,eAAA8E,EAAAC,EAAAX,EAAAC,EAAA,CAKEd,EAAA,CAAe,GAAAwB,EAAA,KACN,KAAA,KACD,OAAAX,EACE,QAAAA,IAAArD,EAAA,YAAAb,EAAA,gCAAA,CAGiCoE,EAAA,IAAA,KAAAtE,EAAA,WAAA,EAAAuE,EAAA,CACqB,CAAA,EAAA,GAAA7D,EAAAV,EAAA,WAAAgF,EAAA,KAAA,CAAA,IAAAhF,EAAA,sBAAA,MAAA,GAIxD,QAAA,CACG,WAAAA,EAAA,WACW,YAAAA,EAAA,YACC,SAAAoE,CACnB,CACF,CAAA,EAGFpB,EAAAqB,CAAA,EAAA,UAAA,MAAAZ,EAAAsB,EAAA,CAA+D,cAAA,MAAAE,GAAA,CAE3DjC,EAAAqB,CAAA,EAAA,WAAA,GACArB,EAAAqB,CAAA,EAAA,QAAAY,EAEA,MAAAC,GAAA,MAAAxB,EAAAuB,CAAA,EACAjC,EAAAqB,CAAA,EAAA,YAAAc,GAAAD,EAAA,EAEAjB,GAAgB,EAClB,WAAA,IAAA,CAEEjB,EAAAqB,CAAA,EAAA,WAAA,EAA2C,CAC7C,CAAA,CACD,CAGH,eAAAG,GAAAJ,EAAAC,EAAA,CACE,GAAA,CACE,IAAAU,EAGA,GAFA/B,EAAAqB,CAAA,EAAA,KAAA,GAEAD,IAAArD,EAAA,YACEgE,EAAA,MAAAK,GAAA,MAAA,WAA0CjC,EAAA,EAC5BnD,EAAA,WACNA,EAAA,WACA,UACRoE,IAAArD,EAAA,YAEAgE,EAAA,MAAAK,GAAA,MAAA,WAA0CjC,EAAA,EAC5BnD,EAAA,WACN,UACRoE,IAAArD,EAAA,cAEAgE,EAAA,MAAAK,GAAA,MAAA,aAA0CjC,EAAA,EAC5BnD,EAAA,UACN,MAGR,OAAA,IAAA,MAAA,+BAAA,EAGF,OAAAgD,EAAAqB,CAAA,EAAA,KAAA,GACArB,EAAAqB,CAAA,EAAA,WAAA,GAEA,QAAA,IAAA,UAAAU,CAAA,EAEAD,EAAAC,EAAAX,EAAAC,CAAA,EACAU,CAAO,OAAAM,EAAA,CAIP,OAAAC,GAAA,CAAyB,MAAAD,EACvB,QAAA,CAAA,MAAA,QAAA,MAAA,CAAA,SAAAjB,EAAA,MAAApE,EAAA,CACsD,CAAA,EAGxD,QAAA,OAAAqF,CAAA,CAA2B,CAC7B,CAMF,OAAAE,GAAAb,EAAA,IAAA,CACEA,EAAA,OACE9B,EAAA,UAAAI,CAAA,CACF,CAAA,EAMFwC,GAAA,SAAA,CACE,MAAAC,EAAA,MAAA1B,EAAA,CAAsD,iBAAAc,EAAA,MACjB,QAAA5B,EAAA,UAAA,MACF,WAAAyC,GAAA,QACN,SAAA,EAEjB,CAAA,EAEZjB,EAAA,MAAA,QAAA,GAAAgB,CAAA,EACA3C,EAAA,MAAA,EAA2B,CAAA,6uDC5M7B,MAAA9C,EAAAC,EAKA,CAAA,SAAA0F,GAAAlF,KACA,CAAA,KAAAC,GAAAC,IAKAiF,EAAArF,EAAyB,IAAAP,EAAA,aAAA,OAAA,IAAA6F,GAAA,CAGnB,MAAAC,EAAAC,EAAAF,EAAA,MAAA,EACAG,EAAAH,EAAA,QAAAF,EAAAE,EAAA,OAAA,EAAA,OAEA,MAAA,GAAAC,CAAA,IAAAE,CAAA,EAA+B,CAAA,EAAA,KAAA,KAAA,CAEtB,EAMf,SAAAD,EAAAE,EAAA,CACE,OAAAvF,EAAAuF,GAAA,IAAA,CAA2B,MAAA,UAClB,sBAAA,CACgB,CAAA,CACxB,60BCxBH,KAAA,CAAA,KAAAvF,GAAAC,IACA,CAAA,eAAAuF,GAAAC,KACA,CAAA,EAAAjG,GAAAC,IAKAiG,EAAA7F,EAAA,IAAA,WAAA,OAA6C,CAC3C,MAAAL,EAAA,kCAAA,EAC6C,MAAA,OAAAwB,EAAAwE,EAAA,QAAA,YAAAxE,EAAA,MAAA,EACF,EAC3C,CACA,MAAAxB,EAAA,kCAAA,EAC6C,MAAA,SAAAmG,EAAAH,EAAA,QAAA,YAAAG,EAAA,MAAA,EACA,EAC7C,CACA,MAAAnG,EAAA,kCAAA,EAC6C,MAAA,UAAAoG,EAAAJ,EAAA,QAAA,YAAAI,EAAA,MAAA,EACC,CAC9C,EAAA,gtCCbF,MAAAtG,EAAAC,EAKA,CAAA,KAAAS,GAAAC,IACA,CAAA,eAAAuF,GAAAC,KAKAI,EAAAhG,EAAmB,IAAAO,EAAAd,EAAA,aAAA,cAAA,EAAA,IAAAA,EAAA,aAAA,WAAA,CACyD,EAG5EwG,EAAAjG,EAA8B,IAAAgG,EAAA,MAAA,MAAAvG,EAAA,cAAA,YAAA,EAAA,SAAA,CACsC,EAGpEyG,EAAAlG,EAA4B,IAAAgG,EAAA,MAAA,MAAAvG,EAAA,UAAA,EAAA,SAAA,CACwB,EAGpD0G,EAAAnG,EAA0B,IAAAgG,EAAA,MAAA,MAAAvG,EAAA,aAAA,EAAA,SAAA,CAC6B,EAGvD2G,EAAApG,EAAyB,IAAAP,EAAA,SAAA,SAAA,GAAAA,EAAA,SAAA,SAAAe,EAAA,WAAA,CAEsD,EAG/E6F,EAAArG,EAA2B,IAAAP,EAAA,SAAA,SAAA,GAAAA,EAAA,SAAA,SAAAe,EAAA,aAAA,CAGuB,8yCCjClD,MAAAf,EAAAC,EAEA2C,EAAAC,EAOAgE,EAAA9D,EAAA,EAAA,EACA+D,EAAA/D,EAAA/C,EAAA,YAAA,EACA+G,EAAAhE,EAAA/C,EAAA,qBAAA,EACAuB,EAAAwB,EAAA/C,EAAA,UAAA,EACAwC,EAAAO,EAAA/C,EAAA,WAAA,EACAoE,EAAArB,EAAA/C,EAAA,QAAA,EACAsB,EAAAyB,EAAA/C,EAAA,aAAA,EACA2B,EAAAoB,EAAA/C,EAAA,aAAA,EAGAgH,EAAAC,GAA4BtF,EAAA,MACZa,EAAA,KACF,EAMd,CAAA,EAAAtC,GAAAC,IACA,CAAA,QAAA+G,CAAA,EAAAC,GAAA,EACA,CAAA,WAAAjG,GAAAC,IAKAiG,EAAA7G,EAAA,IACE6D,EAAA,MAAA,SAAA,EACEyC,EAAA,MAAA3G,EAAA,gCAAAkE,EAAA,MAAA,CAAA,CAAA,YAAA,EAAAlE,EAAA,gCAAAkE,EAAA,MAAA,CAAA,CAAA,UAAA,EAIFyC,EAAA,MAAA3G,EAAA,gCAAAa,EAAA,WAAA,YAAA,EAAAb,EAAA,gCAAAa,EAAA,WAAA,UAAA,CAEoE,EAMtE,SAAAsG,GAAA,CACEzE,EAAA,OAAA,CAAY,CAGd,SAAA0E,GAAA,CACET,EAAA,MAAA,GACAK,IACAhG,GAAW,ojCClEb,MAAAlB,EAAAC,EAKA,CAAA,WAAAsB,GAAAJ,IAKAoG,EAAAhH,EAA4B,IAAAO,EAAAd,EAAA,aAAA,cAAA,EAAA,IAAAA,EAAA,aAAA,WAAA,EAAA,MAAAuB,EAAA,KAAA,EAAA,SAAA,CAId,kjBCZd,KAAA,CAAA,GAAApB,IAKAH,EAAAC,EAMA,CAAA,YAAAuC,GAAArB,IAKAqG,EAAAjH,EAAA,IAAA,CAAiC,CAC/B,MAAA,EAAA,kCAAA,EAC6C,OAAA,IAAAkH,EAAAzH,EAAA,uBAAA,CACkB,EAC/D,CACA,MAAA,EAAA,kCAAA,EAC6C,OAAA,IAAAyH,EAAA1I,GAAAiB,EAAA,wBAAA,CAAA,EAAA,SAAA,CAE6B,EAC1E,CACA,MAAA,EAAA,kCAAA,EAC6C,OAAA,IAAAyH,EAAA1I,GAAAiB,EAAA,wBAAA,EAAA,EAAA,SAAA,CAE8B,EAC3E,CACA,MAAA,EAAA,kCAAA,EAC6C,OAAA,IAAAyH,EAAA1I,GAAAiB,EAAA,wBAAA,EAAA,EAAA,SAAA,CAE8B,EAC3E,CACA,MAAA,EAAA,kCAAA,EAC6C,OAAA,IAAA,CAEzCwC,EAAA,MAAAkF,EAAA1H,EAAA,uBAAA,CAAiE,CACnE,CACF,CAAA,EAMFwF,GAAA,IAAA,OACEhD,EAAA,OAAAd,EAAA1B,EAAA,gBAAA,MAAA0B,EAAA,gBAAAgG,EAAA1H,EAAA,cAAA,aAAA,EAAA0H,EAAA1H,EAAA,uBAAA,CAEiD,CAAA,EAMnD,SAAAyH,EAAA1F,EAAA,CACES,EAAA,MAAAkF,EAAoB,KAAA,IAAA3F,EAAA/B,EAAA,uBAAA,CAC+B,CACnD,CAGF,SAAA0H,EAAAhI,EAAA,CACE,OAAA4E,EAAA5E,EAAAiI,EAAA,CAAqC,8nBCnEvC,KAAA,CAAA,KAAAjH,GAAAC,IACA,CAAA,eAAAuF,GAAAC,yiBCaA,MAAAnG,EAAAC,EAKA2H,EAAA7E,EAAA,EAAA,EAEA,CAAA,YAAAP,EAAA,WAAAjB,CAAA,EAAAJ,EAAA,EACA,CAAA,cAAA0G,EAAA,iCAAAC,EAAA,oBAAAzE,CAAA,EAAAC,GAAA,EAGA,CAAA,kBAAA9B,EAAA,sBAAAC,EAAA,cAAAE,CAAA,EAAAN,GAAA0G,GAAA/H,EAAA,eAAA,CAAA,EAGA,CAAM,wBAAAoC,EACJ,wBAAAG,EACA,mBAAAG,EACA,sBAAAC,CACA,EAAAV,GAAAjC,EAAA,aAAA,EAMF,CAAA,WAAAQ,GAAAC,KAKAuH,EAAAzH,EAA+B,IAAAC,EAAAR,EAAA,aAAA,OAAA,CACQ,EAGvCiI,EAAA1H,EAAA,IAAA,SACE,GAAA8C,EAAA,MACE,MAAA,GAGF,MAAA6E,EAAApH,EAAAkH,EAAA,OAAA,GAAA,EAGA,OAFAlH,EAAAS,EAAA,OAAA,GAAA,EAEA,cAAA2G,CAAA,EACE,IAGFxG,EAAA1B,EAAA,gBAAA,MAAA0B,EAAA,iBAAA,GAAA2E,EAAArG,EAAA,gBAAA,MAAAqG,EAAA,WACE,CAAA5E,EAAA,OAAA,CAAAkB,EAAA,MAGF,CAAAuF,EAAA,GAAA,CAAA,GAAA,CAAA1G,EAAA,OAAA,CAAAkB,EAAA,KAGsB,CAAA,EAIxBsE,EAAAzG,EAAA,IACE0H,EAAA,MACE,IAGFhB,GAAAtF,EAAA,MAAAa,EAAA,KAAA,CAA2D,EAG7D4B,EAAA7D,EAAA,IAAA,SACE,IAAAmB,EAAA1B,EAAA,gBAAA,MAAA0B,EAAA,iBAAA,GAAA2E,EAAArG,EAAA,gBAAA,MAAAqG,EAAA,WAAA,CACE,GAAA5E,EAAA,OAAAkB,EAAA,MACE,MAAA,CAAA5B,EAAA,cAAAA,EAAA,WAAA,EAEF,GAAA4B,EAAA,MACE,MAAA,CAAA5B,EAAA,WAAA,EAEF,GAAAU,EAAA,MACE,MAAA,CAAAV,EAAA,aAAA,CACF,CAEF,MAAA,CAAAA,EAAA,WAAA,CAA4B,CAAA,EAM9B,SAAAoH,GAAA,CACEP,EAAA,MAAA,EAAyB,CAG3B,SAAAQ,GAAA,CACEH,EAAA,QACAL,EAAA,MAAA,GAAyB,wyCCrG3B,KAAA,CAAA,SAAAjC,GAAAlF,KACA,CAAA,cAAAoH,GAAAvE,KACA,CAAA,eAAA+E,GAAAlC,KACA,CAAA,UAAAmC,EAAA,SAAAC,CAAA,EAAAC,GAAA,EAKAC,EAAAC,GAAAL,EAAA,KAAA,EACAM,EAAAxB,KAKAyB,EAAArI,EAAA,IAAAkI,EAAA,UAAA,KAAA,EAEAI,EAAAtI,EAAA,IAAAoI,EAAA,UAAA,KAAA,EAEA7B,EAAAvG,EAAqB,IAAAkI,EAAA,KAAA,KACU,EAG/B1B,EAAAxG,EAA8B,IAAAuG,EAAA,OAAA,KAAAnB,EAAAmB,EAAA,MAAA,OAAA,EAAA,IACwC,EAGtExF,EAAAf,EAAA,IAAAoI,EAAA,KAAA,KAAA,EAEAG,EAAAvI,EAAkB,IAAAsH,EAAA,MAAAe,EAAA,OAAAC,EAAA,MAAAD,EAAA,KAGQ","x_google_ignoreList":[0,1,2,3]}