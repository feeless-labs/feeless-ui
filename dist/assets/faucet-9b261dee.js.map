{"version":3,"file":"faucet-9b261dee.js","sources":["../../src/services/balancer/contracts/contracts/faucet.ts","../../src/components/btns/DripBtn/DripBtn.vue","../../src/components/tables/FaucetTable/FaucetTable.vue"],"sourcesContent":["import FaucetAbi from '@/lib/abi/Faucet.json';\nimport { configService } from '@/services/config/config.service';\nimport { walletService as walletServiceInstance } from '@/services/web3/wallet.service';\n\nexport class Faucet {\n  constructor(\n    private readonly abi = FaucetAbi,\n    private readonly config = configService,\n    private readonly walletService = walletServiceInstance,\n    public readonly address = config.network.addresses.faucet\n  ) {\n    if (!this.address) console.error('Faucet address not set');\n  }\n\n  /**\n   * @summary Drip token from faucet\n   */\n  async drip(tokenAddress: string) {\n    return await this.walletService.txBuilder.contract.sendTransaction({\n      contractAddress: this.address,\n      abi: this.abi,\n      action: 'drip',\n      params: [tokenAddress],\n    });\n  }\n}\n\nexport const faucet = new Faucet();\n","<script lang=\"ts\" setup>\nimport { faucet } from '@/services/balancer/contracts/contracts/faucet';\n\nimport TxActionBtn from '../TxActionBtn/TxActionBtn.vue';\n\n/**\n * TYPES\n */\ntype Props = {\n  token: string;\n};\n\n/**\n * PROPS & EMITS\n */\nconst props = defineProps<Props>();\n\n/**\n * STATE\n */\nconst tokenAddress = computed((): string => props.token);\n\n/**\n * METHODS\n */\nasync function dripTx() {\n  return await faucet.drip(tokenAddress.value);\n}\n</script>\n\n<template>\n  <TxActionBtn\n    label=\"Drip\"\n    color=\"gradient\"\n    size=\"sm\"\n    :actionFn=\"dripTx\"\n    action=\"drip\"\n    summary=\"Dripping from faucet\"\n    confirmingLabel=\"Drip\"\n  />\n</template>\n","<script lang=\"ts\" setup>\nimport { orderBy } from 'lodash';\nimport { computed, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport { ColumnDefinition } from '@/components/_global/BalTable/types';\n\nimport DripBtn from '@/components/btns/DripBtn/DripBtn.vue';\nimport useBreakpoints from '@/composables/useBreakpoints';\nimport useNumbers, { FNumFormats } from '@/composables/useNumbers';\nimport { useTokenLists } from '@/providers/token-lists.provider';\nimport { useTokens } from '@/providers/tokens.provider';\n\n/**\n * COMPOSABLES\n */\nconst { t } = useI18n();\nconst { upToLargeBreakpoint } = useBreakpoints();\nconst { fNum } = useNumbers();\nconst { balancerTokenList } = useTokenLists();\nconst { priceFor, balanceFor } = useTokens();\n\nconst tokens = computed(() => {\n  const tokensWithValues = Object.values(balancerTokenList.value.tokens)\n    .map(token => {\n      const balance = balanceFor(token.address);\n      const price = priceFor(token.address);\n      const value = Number(balance) * price;\n      return {\n        ...token,\n        price,\n        balance,\n        value,\n      };\n    })\n    .filter(t => t.address != '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE');\n\n  return orderBy(tokensWithValues, ['value', 'balance'], ['desc', 'desc']);\n});\n\n/**\n * STATE\n */\nconst columns = ref<ColumnDefinition<any>[]>([\n  {\n    name: 'Token',\n    id: 'token',\n    accessor: 'token',\n    Cell: 'tokenColumnCell',\n    width: 475,\n    noGrow: true,\n  },\n  {\n    name: t('balance'),\n    id: 'Balance',\n    align: 'right',\n    width: 150,\n    accessor: ({ balance }) => `${fNum(balance, FNumFormats.token)}`,\n  },\n  {\n    name: t('value'),\n    id: 'value',\n    align: 'right',\n    width: 150,\n    accessor: ({ value }) => fNum(value, FNumFormats.fiat),\n  },\n  {\n    name: 'Drip',\n    id: 'drip',\n    align: 'center',\n    accessor: 'drip',\n    Cell: 'dripColumnCell',\n    width: 150,\n  },\n]);\n</script>\n\n<template>\n  <BalCard\n    shadow=\"lg\"\n    :square=\"upToLargeBreakpoint\"\n    :noBorder=\"upToLargeBreakpoint\"\n    noPad\n  >\n    <BalTable\n      :columns=\"columns\"\n      :data=\"tokens\"\n      skeletonClass=\"h-64\"\n      :square=\"upToLargeBreakpoint\"\n    >\n      <template #tokenColumnCell=\"{ name, logoURI }\">\n        <div class=\"flex items-center py-4 px-6\">\n          <BalAsset :iconURI=\"logoURI\" />\n          <span class=\"ml-2\">{{ name }}</span>\n        </div>\n      </template>\n      <template #dripColumnCell=\"{ address }\">\n        <div class=\"flex justify-center py-4 px-2\">\n          <DripBtn :token=\"address\" />\n        </div>\n      </template>\n    </BalTable>\n  </BalCard>\n</template>\n"],"names":["Faucet","abi","FaucetAbi","config","configService","walletService","walletServiceInstance","address","tokenAddress","faucet","props","__props","computed","dripTx","t","useI18n","upToLargeBreakpoint","useBreakpoints","fNum","useNumbers","balancerTokenList","useTokenLists","priceFor","balanceFor","useTokens","tokens","tokensWithValues","token","balance","price","value","t2","orderBy","columns","ref","FNumFormats"],"mappings":"m3DAIO,MAAMA,CAAO,CAClB,YACmBC,EAAMC,EACNC,EAASC,EACTC,EAAgBC,EACjBC,EAAUJ,EAAO,QAAQ,UAAU,OACnD,CAJiB,KAAA,IAAAF,EACA,KAAA,OAAAE,EACA,KAAA,cAAAE,EACD,KAAA,QAAAE,EAEX,KAAK,SAAS,QAAQ,MAAM,wBAAwB,CAC3D,CAKA,MAAM,KAAKC,EAAsB,CAC/B,OAAO,MAAM,KAAK,cAAc,UAAU,SAAS,gBAAgB,CACjE,gBAAiB,KAAK,QACtB,IAAK,KAAK,IACV,OAAQ,OACR,OAAQ,CAACA,CAAY,CAAA,CACtB,CACH,CACF,CAEa,MAAAC,EAAS,IAAIT,kDCZ1B,MAAAU,EAAAC,EAKAH,EAAAI,EAAA,IAAAF,EAAA,KAAA,EAKA,eAAAG,GAAA,CACE,OAAA,MAAAJ,EAAA,KAAAD,EAAA,KAAA,CAA2C,2RCV7C,KAAA,CAAA,EAAAM,GAAAC,IACA,CAAA,oBAAAC,GAAAC,IACA,CAAA,KAAAC,GAAAC,IACA,CAAA,kBAAAC,GAAAC,IACA,CAAA,SAAAC,EAAA,WAAAC,CAAA,EAAAC,EAAA,EAEAC,EAAAb,EAAA,IAAA,CACE,MAAAc,EAAA,OAAA,OAAAN,EAAA,MAAA,MAAA,EAAA,IAAAO,GAAA,CAEI,MAAAC,EAAAL,EAAAI,EAAA,OAAA,EACAE,EAAAP,EAAAK,EAAA,OAAA,EACAG,EAAA,OAAAF,CAAA,EAAAC,EACA,MAAA,CAAO,GAAAF,EACF,MAAAE,EACH,QAAAD,EACA,MAAAE,CACA,CACF,CAAA,EAAA,OAAAC,GAAAA,EAAA,SAAA,4CAAA,EAIJ,OAAAC,EAAA,QAAAN,EAAA,CAAA,QAAA,SAAA,EAAA,CAAA,OAAA,MAAA,CAAA,CAAuE,CAAA,EAMzEO,EAAAC,EAAA,CAA6C,CAC3C,KAAA,QACQ,GAAA,QACF,SAAA,QACM,KAAA,kBACJ,MAAA,IACC,OAAA,EACC,EACV,CACA,KAAApB,EAAA,SAAA,EACmB,GAAA,UACb,MAAA,QACG,MAAA,IACA,SAAA,CAAA,CAAA,QAAAc,CAAA,IAAA,GAAAV,EAAAU,EAAAO,EAAA,KAAA,CAAA,EACuD,EAChE,CACA,KAAArB,EAAA,OAAA,EACiB,GAAA,QACX,MAAA,QACG,MAAA,IACA,SAAA,CAAA,CAAA,MAAAgB,CAAA,IAAAZ,EAAAY,EAAAK,EAAA,IAAA,CAC8C,EACvD,CACA,KAAA,OACQ,GAAA,OACF,MAAA,SACG,SAAA,OACG,KAAA,iBACJ,MAAA,GACC,CACT,CAAA"}