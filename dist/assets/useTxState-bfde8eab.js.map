{"version":3,"file":"useTxState-bfde8eab.js","sources":["../../src/composables/useTxState.ts"],"sourcesContent":["import { TransactionReceipt } from '@ethersproject/abstract-provider';\nimport { computed, reactive } from 'vue';\n\nexport type TxState = {\n  init: boolean;\n  confirming: boolean;\n  confirmed: boolean;\n  confirmedAt: string;\n  receipt?: TransactionReceipt;\n};\n\n/**\n * Composable for managing the state of a transaction.\n */\nexport function useTxState() {\n  const txState = reactive<TxState>({\n    init: false,\n    confirming: false,\n    confirmed: false,\n    confirmedAt: '',\n  });\n\n  const txInProgress = computed(\n    (): boolean => txState.init || txState.confirming || txState.confirmed\n  );\n\n  function resetTxState(): void {\n    Object.assign(txState, {\n      init: false,\n      confirming: false,\n      confirmed: false,\n      confirmedAt: '',\n    });\n  }\n\n  return { txState, txInProgress, resetTxState };\n}\n"],"names":["useTxState","txState","reactive","txInProgress","computed","resetTxState"],"mappings":"+CAcO,SAASA,GAAa,CAC3B,MAAMC,EAAUC,EAAkB,CAChC,KAAM,GACN,WAAY,GACZ,UAAW,GACX,YAAa,EAAA,CACd,EAEKC,EAAeC,EACnB,IAAeH,EAAQ,MAAQA,EAAQ,YAAcA,EAAQ,SAAA,EAG/D,SAASI,GAAqB,CAC5B,OAAO,OAAOJ,EAAS,CACrB,KAAM,GACN,WAAY,GACZ,UAAW,GACX,YAAa,EAAA,CACd,CACH,CAEO,MAAA,CAAE,QAAAA,EAAS,aAAAE,EAAc,aAAAE,EAClC"}