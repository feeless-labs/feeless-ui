var Ke=Object.defineProperty;var Ye=(d,e,s)=>e in d?Ke(d,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):d[e]=s;var E=(d,e,s)=>(Ye(d,typeof e!="symbol"?e+"":e,s),s);import{_ as Qe}from"./BalAlert-7103ffb1.js";import{d as ce,y as be,c as o,o as u,B as V,w as m,ay as je,f as b,C as t,F as N,b as C,t as le,J as de,a as g,aY as Xe,H as fe,fX as _e,E as Y,u as Ie,c2 as Je,D as Ze,fY as De,S as R,m as ne,G as Q,X as q,z as Te,a1 as $e,b7 as xe,U as j,I as et,c6 as tt,K as nt,L as at,gc as Ne,e as ve,bM as We,b8 as Le,bg as Re,fZ as qe,gd as it,ge as st,a8 as rt,a7 as pt,cU as v,bY as Be,bT as he,V as ke,j as ee,n as te,Z as ot,cc as Ge,aa as ut,p as lt,g as dt,_ as yt}from"./index-60943df8.js";import{_ as Ce}from"./BalTable.vue_vue_type_style_index_0_lang-bf21b918.js";import{_ as Oe}from"./BalChip-810690c3.js";import{_ as He}from"./BalAssetSet-c1957457.js";import{E as ct,a as mt,b as Tt}from"./exit-pool.service-ce4bf5d3.js";import{u as Se}from"./useBreakpoints-76e5f77c.js";import{T as Ae,a as Ee}from"./tokens_black-ddc115cd.js";import{_ as bt}from"./TokenPills.vue_vue_type_script_setup_true_lang-ee78290c.js";import{_ as ye}from"./TxActionBtn.vue_vue_type_script_setup_true_lang-27990a4e.js";import{B as ze}from"./BalAsset-68194947.js";import{u as ft,A as wt}from"./useTokenApprovalActions-885c33f2.js";import{a as gt,R as vt}from"./useRelayerApproval-8e49cdc5.js";import"./helpers-7076a817.js";import"./BalTooltip.vue_vue_type_style_index_0_lang-8cf64573.js";import"./vue-query-ecc7fe75.js";import"./constants-dee7c074.js";const ht=C("h4",null,"Proportionally withdraw",-1),kt={key:0,class:"text-secondary"},_t={key:1,class:"text-secondary"},It=C("p",null," The withdraw transaction will perform a recovery exit from this pool. This type of withdrawal results in zero price impact, as tokens are withdrawn in the same proportions as the pool balances. If this pool contains nested pool tokens, you will need to perform additional transactions to withdraw from nested pools. ",-1),Rt=ce({__name:"WithdrawalModal",props:{pool:{},balance:{},iconAddresses:{},withdrawFn:{type:Function}},emits:["close","success"],setup(d,{emit:e}){const s=d,f=e,{fNum:l}=be(),T=o(()=>s.iconAddresses.length*32/1.5);return(p,c)=>{const I=Xe,w=He,A=fe,W=je;return u(),V(W,{show:"",onClose:c[1]||(c[1]=k=>f("close"))},{header:m(()=>[ht]),footer:m(()=>[b(ye,{label:"Withdraw",color:"gradient",actionFn:()=>p.withdrawFn(),action:"withdraw",summary:p.$t("transactionSummary.withdrawFromBalance",[t(l)(p.balance,t(N).token)]),confirmingLabel:"Withdrawing...",block:"",onConfirmed:c[0]||(c[0]=k=>f("success"))},null,8,["actionFn","summary"])]),default:m(()=>[b(A,{class:"mb-4"},{default:m(()=>[b(I,{horizontal:"",justify:"between",align:"center"},{default:m(()=>[b(I,{vertical:"",spacing:"none"},{default:m(()=>{var k,G;return[C("h5",null,le(t(l)(p.balance))+" "+le(p.$t("lpTokens")),1),(k=t(de)(p.pool.id))!=null&&k.name?(u(),g("div",kt,le((G=t(de)(p.pool.id))==null?void 0:G.name),1)):(u(),g("span",_t,le(p.pool.symbol),1))]}),_:1}),b(w,{addresses:p.iconAddresses,width:t(T),size:32},null,8,["addresses","width"])]),_:1})]),_:1}),It]),_:1})}}}),Ct=C("h4",{class:"mb-2"}," 2. Withdraw your liquidity (this may require several transactions) ",-1),St={class:"flex items-center"},At=["src"],Et=["src"],Mt=["data-testid"],xt={key:0,class:"flex items-center py-4 px-6"},Wt={key:0,class:"pr-2 text-left"},Lt={key:1},Bt={key:0,class:"flex justify-end items-center py-4 px-6 text-right"},Vt={class:"flex justify-end py-4 px-6"},Pt=ce({__name:"WithdrawalsTable",props:{unstakeEvents:{}},emits:["withdrawal"],setup(d,{emit:e}){const s=new _e,f=d,l=e,T=Y(!1),p=Y(null),{account:c,getSigner:I}=Ie(),{slippageBsp:w}=Je(),{transactionDeadline:A}=tt(),{fNum:W}=be(),{upToLargeBreakpoint:k}=Se(),{darkMode:G}=Re(),O=Ze(),ae=o(()=>De[R.value]),H=o(()=>ae.value.map(a=>({id:a,address:a.slice(0,42)}))),$=o(()=>!!c.value),L=ne(["CspExit","balances",{networkId:R,account:c}],async()=>{const a=await s.metadata.get(H.value.map(y=>y.address),qe.value);return s.balances.get(c.value,a)},{enabled:$}),z=o(()=>L.data.value||{}),M=o(()=>H.value.filter(a=>Q(F(a)).gt(0))),ie=o(()=>!!M.value.length&&!q(L)),P=ne(["CspExit","pools",{networkId:R,poolsWithBalances:M}],async()=>it.pools.get({chainId:R.value,first:1e3,where:{id:{in:M.value.map(a=>a.id)}}}),{enabled:ie}),se=o(()=>P.data.value||[]),B=o(()=>q(L)||q(P));function F(a){return z.value[Te(a.address)]||"0"}async function K(a){const y=new ct(Y(a));return y.setExitHandler(mt.Recovery),y.exit({exitType:Tt.GivenIn,bptIn:F(a),amountsOut:[],signer:I(),slippageBsp:w.value,tokenInfo:{},approvalActions:[],bptInValid:!0,transactionDeadline:A.value})}function re(a){return!a.isInRecoveryMode}function X(a){var y;return(y=de(a.id))!=null&&y.hasIcon?[a.address]:et(a)}function S(a){const y=O.resolve({name:"pool",params:{id:a.id,networkSlug:We}});window.open(y.href)}async function J(){return L.refetch()}function pe(a){return st[R.value].includes(a)}function U(){J(),l("withdrawal"),Z()}function oe(a){p.value=a,T.value=!0}function Z(){T.value=!1,p.value=null}$e(()=>f.unstakeEvents,()=>J());const i=Y([{name:"Icons",id:"icons",accessor:"uri",Header:"iconColumnHeader",Cell:"iconColumnCell",width:125,noGrow:!0},{name:"Composition",id:"poolName",accessor:"id",Cell:"poolNameCell",width:350},{name:"Risk",id:"risk",width:150,align:"right",noGrow:!0,accessor:"risk",Cell:"riskCell"},{name:"Balance",id:"balance",align:"right",width:150,cellClassName:"font-numeric",accessor:a=>`${W(F(a),N.token)}`},{name:"Value",align:"right",id:"value",width:150,cellClassName:"font-numeric",accessor:a=>W(xe(a,F(a)),N.fiat),sortKey:a=>{const y=Number(xe(a,F(a)));return y===1/0||isNaN(y)?0:y}},{name:"",id:"withdraw",align:"right",accessor:"withdraw",Cell:"withdrawColumnCell",width:150}]);return(a,y)=>{const n=He,r=Oe,h=rt,x=pt,ue=Ce,D=fe;return u(),g("div",null,[Ct,b(D,{shadow:"lg",square:t(k),noBorder:t(k),noPad:""},{default:m(()=>[b(ue,{columns:t(i),data:t(se),skeletonClass:"h-64",square:t(k),isLoading:t(B),onRowClick:S,initialState:{sortColumn:"value",sortDirection:"desc"}},{iconColumnHeader:m(()=>[C("div",St,[t(G)?(u(),g("img",{key:0,src:t(Ae),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,At)):(u(),g("img",{key:1,src:t(Ee),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,Et))])]),iconColumnCell:m(_=>[t(B)?j("",!0):(u(),g("div",{key:0,class:"py-4 px-6","data-testid":_==null?void 0:_.id},[b(n,{addresses:X(_),width:100},null,8,["addresses"])],8,Mt))]),poolNameCell:m(_=>{var we,Me;return[t(B)?j("",!0):(u(),g("div",xt,[(we=t(de)(_.id))!=null&&we.name?(u(),g("div",Wt,le((Me=t(de)(_.id))==null?void 0:Me.name),1)):(u(),g("div",Lt,[b(bt,{tokens:t(nt)(_,_.tokens),isStablePool:t(at)(_.poolType)},null,8,["tokens","isStablePool"])]))]))]}),riskCell:m(_=>[t(B)?j("",!0):(u(),g("div",Bt,[t(Ne)(_.id)?(u(),V(r,{key:0,label:"High risk",color:"red"})):(u(),V(r,{key:1,label:"Mitigated",color:"orange"}))]))]),withdrawColumnCell:m(_=>[C("div",Vt,[pe(_.id)?(u(),V(x,{key:0,tag:"a",color:"gradient",size:"sm",href:`/#/${t(We)}/pool/${_.id}/withdraw`,target:"_blank",rel:"noreferrer",onClick:y[0]||(y[0]=Le(()=>{},["stop"]))},{default:m(()=>[ve(" Withdraw "),b(h,{name:"arrow-up-right",size:"sm"})]),_:2},1032,["href"])):(u(),V(x,{key:1,color:"gradient",size:"sm",disabled:re(_),onClick:Le(we=>oe(_),["stop"])},{default:m(()=>[ve(" Withdraw ")]),_:2},1032,["disabled","onClick"]))])]),_:1},8,["columns","data","square","isLoading"])]),_:1},8,["square","noBorder"]),t(T)&&t(p)?(u(),V(Rt,{key:0,pool:t(p),balance:F(t(p)),iconAddresses:X(t(p)),withdrawFn:()=>K(t(p)),onClose:Z,onSuccess:U},null,8,["pool","balance","iconAddresses","withdrawFn"])):j("",!0)])}}}),ge=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"}];class Ft{encodeBatchSwap(e){return new v(ge).encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}encodeExitPool(e){return new v(ge).encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}encodeJoinPool(e){return new v(ge).encodeFunctionData("joinPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}constructExitCall(e){const{assets:s,minAmountsOut:f,userData:l,toInternalBalance:T,poolId:p,poolKind:c,sender:I,recipient:w,outputReferences:A}=e,k={poolId:p,poolKind:c,sender:I,recipient:w,outputReferences:A,exitPoolRequest:{assets:s,minAmountsOut:f,userData:l,toInternalBalance:T}};return this.encodeExitPool(k)}}const Ut=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];class Dt{encodeUnwrap(e){return new v(Ut).encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReference])}}const Ve=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapYearnVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapYearnVaultToken",outputs:[],stateMutability:"payable",type:"function"}];class $t{encodeWrap(e){return new v(Ve).encodeFunctionData("wrapYearnVaultToken",[e.vaultToken,e.sender,e.recipient,e.amount,e.outputReference])}encodeUnwrap(e){return new v(Ve).encodeFunctionData("unwrapYearnVaultToken",[e.vaultToken,e.sender,e.recipient,e.amount,e.outputReference])}}const Pe=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"}];class Nt{encodeWrap(e){return new v(Pe).encodeFunctionData("wrapReaperVaultToken",[e.vaultToken,e.sender,e.recipient,e.amount,e.outputReference])}encodeUnwrap(e){return new v(Pe).encodeFunctionData("unwrapReaperVaultToken",[e.vaultToken,e.sender,e.recipient,e.amount,e.outputReference])}}const Fe=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"}];class qt{encodeWrap(e){return new v(Fe).encodeFunctionData("wrapERC4626",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}encodeUnwrap(e){return new v(Fe).encodeFunctionData("unwrapERC4626",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}}const Ue=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class Gt{encodeDeposit(e){return new v(Ue).encodeFunctionData("gaugeDeposit",[e.gauge,e.sender,e.recipient,e.amount])}encodeWithdraw(e){return new v(Ue).encodeFunctionData("gaugeWithdraw",[e.gauge,e.sender,e.recipient,e.amount])}}const me=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"dieselAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapYearn",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"eulerProtocol",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"mainAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapYearn",outputs:[],stateMutability:"payable",type:"function"}],Ot=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class Ht{encodeUnwrap(e){return new v(me).encodeFunctionData("unwrapEuler",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}}class zt{encodeUnwrap(e){return new v(me).encodeFunctionData("unwrapGearbox",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}}class Kt{encodeUnwrap(e){return new v(me).encodeFunctionData("unwrapShareToken",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}}class Yt{encodeUnwrap(e){return new v(me).encodeFunctionData("unwrapTetu",[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}}class Qt{constructor(){E(this,"CHAINED_REFERENCE_PREFIX","ba11");E(this,"TEMP_CHAINED_REFERENCE_PREFIX","ba10");E(this,"vaultActionsService");E(this,"aaveWrappingService");E(this,"yearnWrappingService");E(this,"reaperWrappingService");E(this,"erc4626WrappingService");E(this,"eulerWrappingService");E(this,"gearboxWrappingService");E(this,"siloWrappingService");E(this,"tetuWrappingService");E(this,"gaugeStakingService");this.vaultActionsService=new Ft,this.aaveWrappingService=new Dt,this.yearnWrappingService=new $t,this.reaperWrappingService=new Nt,this.erc4626WrappingService=new qt,this.eulerWrappingService=new Ht,this.gearboxWrappingService=new zt,this.siloWrappingService=new Kt,this.tetuWrappingService=new Yt,this.gaugeStakingService=new Gt}toChainedReference(e){const s=`0x${this.TEMP_CHAINED_REFERENCE_PREFIX}${"0".repeat(64-this.TEMP_CHAINED_REFERENCE_PREFIX.length)}`;return Be.from(s).add(e)}toPersistentChainedReference(e){const s=`0x${this.CHAINED_REFERENCE_PREFIX}${"0".repeat(64-this.CHAINED_REFERENCE_PREFIX.length)}`;return Be.from(s).add(e)}encodePeekChainedReferenceValue(e){return new v(me).encodeFunctionData("peekChainedReferenceValue",[e])}gaugeEncodeDeposit(e){return this.gaugeStakingService.encodeDeposit(e)}gaugeEncodeWithdraw(e){return this.gaugeStakingService.encodeWithdraw(e)}reaperEncodeWrap(e){return this.reaperWrappingService.encodeWrap(e)}reaperEncodeUnwrap(e){return this.reaperWrappingService.encodeUnwrap(e)}erc4626EncodeWrap(e){return this.erc4626WrappingService.encodeWrap(e)}erc4626EncodeUnwrap(e){return this.erc4626WrappingService.encodeUnwrap(e)}unwrapLinearPoolWrappedToken({signer:e,batchRelayerAddress:s,wrappedToken:f,poolType:l,sender:T,recipient:p,amount:c}){const I=new he(e);let w="";if(l==="ReaperLinear"||l==="BeefyLinear")w=this.reaperEncodeUnwrap({vaultToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="ERC4626Linear")w=this.erc4626EncodeUnwrap({wrappedToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="AaveLinear")w=this.aaveWrappingService.encodeUnwrap({staticToken:f,sender:T,recipient:p,amount:c,outputReference:0,toUnderlying:!0});else if(l==="YearnLinear")w=this.yearnWrappingService.encodeUnwrap({vaultToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="EulerLinear")w=this.eulerWrappingService.encodeUnwrap({wrappedToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="TetuLinear")w=this.tetuWrappingService.encodeUnwrap({wrappedToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="GearboxLinear")w=this.gearboxWrappingService.encodeUnwrap({wrappedToken:f,sender:T,recipient:p,amount:c,outputReference:0});else if(l==="SiloLinear")w=this.siloWrappingService.encodeUnwrap({wrappedToken:f,sender:T,recipient:p,amount:c,outputReference:0});else throw new Error("unwrapLinearPoolWrappedToken: Unsupported linear pool type");const A=new v(Ot);return I.raw.sendTransaction({to:s,data:A.encodeFunctionData("multicall",[[w]])})}}const jt=C("h4",{class:"mb-2"},"3. Unwrap your tokens",-1),Xt={class:"flex items-center"},Jt=["src"],Zt=["src"],en={key:0,class:"py-4 px-6 text-left"},tn={class:"flex justify-end py-4 px-6"},nn=ce({__name:"TokenUnwrapTable",props:{withdrawalEvents:{}},setup(d){const e=new _e,s=["0xa0d3707c569ff8c87fa923d3823ec5d81c98be78"],f=d,{account:l,explorerLinks:T,getSigner:p}=Ie(),{fNum:c}=be(),{upToLargeBreakpoint:I}=Se(),{darkMode:w}=Re(),{approveToken:A}=ft(),{relayerApprovalTx:W}=gt(vt.BATCH),k=ke(ee.network.subgraph,["tokenUnwrap","pools",{networkId:R}],()=>({pools:{__args:{first:1e3,where:{poolType_contains:"Linear"}},id:!0,wrappedIndex:!0,factory:!0,poolType:!0,tokens:{address:!0,index:!0}}}),{keepPreviousData:!0,refetchOnWindowFocus:!1}),G=o(()=>{var i;return((i=k.data.value)==null?void 0:i.pools)??[]}),O=o(()=>te.uniqBy(G.value.map(i=>{var a;return{wrapped:(a=i.tokens.find(y=>y.index===i.wrappedIndex)||i.tokens[i.wrappedIndex])==null?void 0:a.address,poolType:i.poolType}}),"wrapped")),ae=o(()=>O.value.length>0),H=ne(["tokenUnwrap","tokens",{networkId:R,allWrappedTokenAddressesWithFactory:O}],async()=>e.metadata.get(O.value.map(i=>i.wrapped).filter(i=>!s.includes(i.toLowerCase())),qe.value),{enabled:ae}),$=o(()=>H.data.value??{}),L=o(()=>Object.keys($.value).length>0&&!!l.value),z=ne(["tokenUnwrap","balances",{networkId:R,tokens:$}],async()=>e.balances.get(l.value,$.value),{enabled:L}),M=o(()=>z.data.value||{}),ie=o(()=>Object.values(M.value).some(i=>Q(i).gt(0))),P=ne(["tokenUnwrap","allowances",{networkId:R,balances:M}],async()=>e.allowances.get(l.value,[ee.network.addresses.vault],$.value),{enabled:ie}),se=o(()=>P.data.value||{}),B=o(()=>q(k)||q(H)||q(z)||q(P)),F=o(()=>te.pickBy($.value,i=>Q(S(i.address)).gt(0))),K=o(()=>Object.values(F.value));async function re(i){const a=p(),y=new Qt,n=O.value.find(h=>ot(h.wrapped,i.address)),r=Ge(S((n==null?void 0:n.wrapped)||""),i.decimals);return y.unwrapLinearPoolWrappedToken({signer:a,batchRelayerAddress:ee.network.addresses.batchRelayer,wrappedToken:(n==null?void 0:n.wrapped)||"",poolType:n==null?void 0:n.poolType,sender:l.value,recipient:l.value,amount:r})}async function X(i){return A({token:i,normalizedAmount:S(i.address),spender:ee.network.addresses.vault,actionType:wt.Unwrapping})}function S(i){return M.value[Te(i)]}function J(i){var a,y;return((y=(a=se.value)==null?void 0:a[ee.network.addresses.vault])==null?void 0:y[Te(i)])??"0"}function pe(i){window.open(T.addressLink(i.address))}function U(i){return Q(S(i.address)).lte(0)}function oe(i){return Q(J(i.address)).lt(S(i.address))}$e(()=>f.withdrawalEvents,()=>z.refetch());const Z=o(()=>[{name:"Icons",id:"icons",accessor:"uri",Header:"iconColumnHeader",Cell:"iconColumnCell",width:100,noGrow:!0},{name:"Token",id:"token",width:150,className:"px-0",accessor:i=>i.symbol},{name:"Balance",id:"balance",align:"right",width:150,cellClassName:"font-numeric",accessor:i=>`${c(S(i.address),N.token)}`,sortKey:i=>{const a=Number(S(i.address));return a===1/0||isNaN(a)?0:a}},{name:"",id:"unwrap",align:"right",accessor:"unwrap",Cell:"unwrapColumnCell",width:I.value?200:100}]);return(i,a)=>{const y=Ce,n=fe;return u(),g("div",null,[jt,b(n,{shadow:"lg",square:t(I),noBorder:t(I),noPad:""},{default:m(()=>[b(y,{columns:t(Z),data:t(K),skeletonClass:"h-64",square:t(I),isLoading:t(B),onRowClick:pe,initialState:{sortColumn:"balance",sortDirection:"desc"}},{iconColumnHeader:m(()=>[C("div",Xt,[t(w)?(u(),g("img",{key:0,src:t(Ae),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,Jt)):(u(),g("img",{key:1,src:t(Ee),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,Zt))])]),iconColumnCell:m(r=>[t(B)?j("",!0):(u(),g("div",en,[b(ze,{address:r.address,iconURI:r.logoURI,size:28},null,8,["address","iconURI"])]))]),unwrapColumnCell:m(r=>[C("div",tn,[oe(r)?(u(),V(ye,{key:0,label:"Approve Vault",color:"gradient",size:"sm",actionFn:()=>X(r),action:"approve",summary:t(c)(S(r.address),t(N).token),confirmingLabel:"Approving...",disableNotification:"",disabled:t(P).isRefetching.value,onConfirmed:a[0]||(a[0]=h=>t(P).refetch())},null,8,["actionFn","summary","disabled"])):t(W).isUnlocked.value?(u(),V(ye,{key:2,label:"Unwrap",color:"gradient",size:"sm",actionFn:()=>re(r),action:"unwrap",summary:t(c)(S(r.address),t(N).token),confirmingLabel:"Unwrapping...",disabled:U(r),onConfirmed:a[1]||(a[1]=h=>t(z).refetch())},null,8,["actionFn","summary","disabled"])):(u(),V(ye,{key:1,label:"Approve Relayer",color:"gradient",size:"sm",actionFn:()=>t(W).approve(),action:"approve",summary:t(c)(S(r.address),t(N).token),confirmingLabel:"Approving...",disableNotification:"",disabled:t(W).loading.value},null,8,["actionFn","summary","disabled"]))])]),_:1},8,["columns","data","square","isLoading"])]),_:1},8,["square","noBorder"])])}}}),an=C("h4",{class:"mb-2"},"1. Unstake your Pool Tokens",-1),sn={class:"flex items-center"},rn=["src"],pn=["src"],on={key:0,class:"py-4 px-6 text-left"},un={key:0,class:"flex justify-end items-center py-4 px-6 text-right"},ln={class:"flex justify-end py-4 px-6"},dn=ce({__name:"UnstakeTable",emits:["unstaked"],setup(d,{emit:e}){const s=new _e,f=[{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]}],l=[{inputs:[{internalType:"bool",name:"claim",type:"bool"}],name:"withdrawAllAndUnwrap",outputs:[],stateMutability:"nonpayable",type:"function"}],T=e,{account:p,explorerLinks:c,getSigner:I}=Ie(),{fNum:w}=be(),{upToLargeBreakpoint:A}=Se(),{darkMode:W}=Re(),k=o(()=>De[R.value]),G=o(()=>k.value.map(n=>n.slice(0,42))),O=o(()=>new Map(k.value.map(n=>[n.slice(0,42),n]))),ae=o(()=>!!p.value),H=ke(ee.network.subgraphs.gauge,["vulnerability","liquidityGauges","unstake",{networkId:R}],()=>({liquidityGauges:{__args:{first:1e3,where:{poolId_in:k.value}},id:!0,symbol:!0,poolId:!0,poolAddress:!0}}),{keepPreviousData:!0,refetchOnWindowFocus:!1}),$=ke("https://data.aura.finance/graphql",["vulnerability","auraGauges","unstake",{networkId:R}],()=>({pools:{__args:{chainId:R.value},id:!0,poolId:!0,address:!0,name:!0,lpToken:{address:!0}}}),{keepPreviousData:!0,refetchOnWindowFocus:!1}),L=o(()=>{var n;return((n=H.data.value)==null?void 0:n.liquidityGauges)??[]}),z=o(()=>{const n=L.value.map(r=>({chainId:R.value,address:r.id,decimals:18,symbol:r.symbol,name:r.symbol,tags:["balancer"]}));return te.keyBy(n,"address")}),M=o(()=>{var n;return(((n=$.data.value)==null?void 0:n.pools)??[]).filter(r=>G.value.includes(r.lpToken.address))}),ie=o(()=>{const n=M.value.map(r=>({chainId:R.value,address:r.address,decimals:18,symbol:r.name,name:r.name,tags:["aura"]}));return te.keyBy(n,"address")}),P=o(()=>te.merge(ie.value,z.value)),se=o(()=>ae.value&&(L.value.length>0||M.value.length>0)),B=ne(["vulnerability","unstake","balances",{networkId:R,allLiquidityGauges:L,allAuraGauges:M}],async()=>s.balances.get(p.value,P.value),{enabled:se}),F=o(()=>B.data.value||{}),K=o(()=>q(H)||q(B)),re=o(()=>te.pickBy(P.value,n=>Q(U(n.address)).gt(0))),X=o(()=>Object.values(re.value));async function S(n){var h;return((h=n.tags)==null?void 0:h.includes("aura"))?J(n):pe(n)}async function J(n){const r=I(),h=new he(r),x=new v(l);return h.raw.sendTransaction({to:n.address,data:x.encodeFunctionData("withdrawAllAndUnwrap",[!0])})}async function pe(n){const r=I(),h=new he(r),x=new v(f),ue=Ge(U(n.address),n.decimals);return h.raw.sendTransaction({to:n.address,data:x.encodeFunctionData("withdraw",[ue])})}function U(n){return F.value[Te(n)]}function oe(n){window.open(c.addressLink(n.address))}function Z(n){return Q(U(n.address)).lte(0)}function i(){B.refetch(),T("unstaked")}function a(n){const r=L.value.find(x=>x.id.toLowerCase()===n.address.toLowerCase());if(r)return r.poolId;const h=M.value.find(x=>x.address.toLowerCase()===n.address.toLowerCase());return h&&O.value.get(h.lpToken.address)||""}const y=Y([{name:"Icons",id:"icons",accessor:"uri",Header:"iconColumnHeader",Cell:"iconColumnCell",width:100,noGrow:!0},{name:"Gauge",id:"token",width:350,className:"px-0",accessor:n=>{var r;return`${n.symbol} (${(r=n.tags)!=null&&r.includes("aura")?"Aura":"Balancer"})`}},{name:"Risk",id:"risk",width:150,align:"right",noGrow:!0,accessor:"risk",Cell:"riskCell"},{name:"Balance",id:"balance",align:"right",width:150,cellClassName:"font-numeric",accessor:n=>`${w(U(n.address),N.token)}`,sortKey:n=>{const r=Number(U(n.address));return r===1/0||isNaN(r)?0:r}},{name:"",id:"unwrap",align:"right",accessor:"unwrap",Cell:"unwrapColumnCell",width:150}]);return(n,r)=>{const h=Oe,x=Ce,ue=fe;return u(),g("div",null,[an,b(ue,{shadow:"lg",square:t(A),noBorder:t(A),noPad:""},{default:m(()=>[b(x,{columns:t(y),data:t(X),skeletonClass:"h-64",square:t(A),isLoading:t(K),onRowClick:oe,initialState:{sortColumn:"balance",sortDirection:"desc"}},{iconColumnHeader:m(()=>[C("div",sn,[t(W)?(u(),g("img",{key:0,src:t(Ae),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,rn)):(u(),g("img",{key:1,src:t(Ee),alt:"token",loading:"lazy",width:"24",height:"15"},null,8,pn))])]),iconColumnCell:m(D=>[t(K)?j("",!0):(u(),g("div",on,[b(ze,{address:D.address,iconURI:D.logoURI,size:28},null,8,["address","iconURI"])]))]),riskCell:m(D=>[t(K)?j("",!0):(u(),g("div",un,[t(Ne)(a(D))?(u(),V(h,{key:0,label:"High risk",color:"red"})):(u(),V(h,{key:1,label:"Mitigated",color:"orange"}))]))]),unwrapColumnCell:m(D=>[C("div",ln,[b(ye,{label:"Unstake",color:"gradient",size:"sm",actionFn:()=>S(D),action:"unstake",summary:t(w)(U(D.address),t(N).token),confirmingLabel:"Unstaking...",disabled:Z(D),onConfirmed:i},null,8,["actionFn","summary","disabled"])])]),_:1},8,["columns","data","square","isLoading"])]),_:1},8,["square","noBorder"])])}}}),yn=d=>(lt("data-v-cd9c2f65"),d=d(),dt(),d),cn={class:"xl:container xl:px-4 pt-10 md:pt-12 xl:mx-auto"},mn={class:"pb-4 content-container"},Tn=yn(()=>C("h2",null,"Proportional exit",-1)),bn={class:"text-primary text-md"},fn=ut('<div data-v-cd9c2f65> This tool was created to facilitate user exits from pools at risk to the vulnerability described <a href="https://forum.balancer.fi/t/vulnerability-found-in-some-pools/5102/1" target="_blank" rel="noopener noreferrer" class="text-blue-500 underline" data-v-cd9c2f65>here</a>. Many of these pools have been disabled to mitigate risk to user funds, so they will only support a basic type of exit. You may need to withdraw several times if you are a liquidity provider in a pool with nested pool tokens. </div><ol class="pt-4 steps" data-v-cd9c2f65><li data-v-cd9c2f65> If your pool tokens are staked, <span class="font-bold" data-v-cd9c2f65>UNSTAKE</span> your pool tokens from the liquidity gauge. This tool supports unstaking from <span class="font-bold" data-v-cd9c2f65>Balancer</span> and <span class="font-bold" data-v-cd9c2f65>Aura</span> gauges. </li><li data-v-cd9c2f65> Exit the liquidity pool by clicking the <span class="font-bold" data-v-cd9c2f65>WITHDRAW</span> button. If the pool contains nested pool tokens you will need to <span class="font-bold" data-v-cd9c2f65>WITHDRAW</span> from the underlying pools as well. </li><li data-v-cd9c2f65> If you were deposited in a boosted pool, you will now have a wrapped version of your assets in your wallet. You need to <span class="font-bold" data-v-cd9c2f65>APPROVE</span> the token to be unwrapped, and then click <span class="font-bold" data-v-cd9c2f65>UNWRAP</span> to receive the underlying token. </li></ol><p data-v-cd9c2f65> The general aim when using this tool is to keep unstaking, withdrawing and unwrapping until you have nothing left in any of the tables below. </p>',3),wn=ce({__name:"recovery-exit",setup(d){const e=Y(0),s=Y(0);return(f,l)=>{const T=Qe;return u(),g("div",cn,[C("div",mn,[Tn,C("div",bn,[fn,b(T,{type:"warning",title:"Check all networks",block:""},{default:m(()=>[ve("If you're invested in pools across several networks, select the appropriate network from the selector in the top right of the screen.")]),_:1})])]),b(dn,{onUnstaked:l[0]||(l[0]=p=>e.value++)}),b(Pt,{unstakeEvents:t(e),class:"mt-8",onWithdrawal:l[1]||(l[1]=p=>s.value++)},null,8,["unstakeEvents"]),b(nn,{withdrawalEvents:t(s),class:"mt-8"},null,8,["withdrawalEvents"])])}}});const Fn=yt(wn,[["__scopeId","data-v-cd9c2f65"]]);export{Fn as default};
//# sourceMappingURL=recovery-exit-1d0f3d25.js.map
