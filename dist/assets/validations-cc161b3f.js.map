{"version":3,"file":"validations-cc161b3f.js","sources":["../../src/lib/utils/validations.ts"],"sourcesContent":["import { isAddress } from '@ethersproject/address';\nimport numeral from 'numeral';\n\nimport i18n from '@/plugins/i18n';\n\nimport { bnum } from '.';\n\nexport function isRequired(field = '') {\n  const _field = field ? `${field} ` : 'Input ';\n  return v => !!v || `${_field}${i18n.global.t('isRequired')}`;\n}\n\nexport function minChar(minLength: number, field = '') {\n  const _field = field ? `${field} ` : '';\n  return v =>\n    !v ||\n    v.length >= minLength ||\n    `${_field}${i18n.global.t('mustBeAtLeast', [minLength])}`;\n}\n\nexport function isPositiveCheck(number: number | string) {\n  return bnum(number).isGreaterThanOrEqualTo(0);\n}\nexport function isPositive() {\n  return v =>\n    !v ||\n    isPositiveCheck(numeral(v).value() || 0) ||\n    i18n.global.t('mustBePositive');\n}\n\nexport function isLessThanOrEqualTo(max: number | string, msg = '') {\n  return v =>\n    !v ||\n    bnum(v).isLessThanOrEqualTo(max) ||\n    (msg ? msg : i18n.global.t('mustBeLessThan', [max]));\n}\n\nexport const isEmailCheck = email => {\n  const regex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(String(email).toLowerCase());\n};\n\nexport function isEmail() {\n  return v => !v || isEmailCheck(v) || i18n.global.t('mustBeValidEmail');\n}\n\nexport function isValidAddress() {\n  return v => !v || isAddress(v) || i18n.global.t('mustBeValidAddress');\n}\n\nexport function isGreaterThan(min: number | string, msg = '') {\n  return v =>\n    !v ||\n    bnum(v).isGreaterThan(min) ||\n    (msg ? msg : i18n.global.t('mustBeMoreThan', [min]));\n}\n\nexport function isTxHash() {\n  const regex = /^0x([A-Fa-f0-9]{64})$/;\n  return v => !v || regex.test(v) || 'Must be valid transaction hash';\n}\n"],"names":["isRequired","field","_field","v","i18n","isPositiveCheck","number","bnum","isPositive","numeral","isLessThanOrEqualTo","max","msg","isValidAddress","isAddress","isGreaterThan","min","isTxHash","regex"],"mappings":"kGAOgB,SAAAA,EAAWC,EAAQ,GAAI,CACrC,MAAMC,EAASD,EAAQ,GAAGA,CAAK,IAAM,SAC9B,OAAAE,GAAK,CAAC,CAACA,GAAK,GAAGD,CAAM,GAAGE,EAAK,OAAO,EAAE,YAAY,CAAC,EAC5D,CAUO,SAASC,EAAgBC,EAAyB,CACvD,OAAOC,EAAKD,CAAM,EAAE,uBAAuB,CAAC,CAC9C,CACO,SAASE,GAAa,CAC3B,OACEL,GAAA,CAACA,GACDE,EAAgBI,EAAQN,CAAC,EAAE,MAAM,GAAK,CAAC,GACvCC,EAAK,OAAO,EAAE,gBAAgB,CAClC,CAEgB,SAAAM,EAAoBC,EAAsBC,EAAM,GAAI,CAClE,UACE,CAACT,GACDI,EAAKJ,CAAC,EAAE,oBAAoBQ,CAAG,GAC9BC,GAAYR,EAAK,OAAO,EAAE,iBAAkB,CAACO,CAAG,CAAC,CACtD,CAYO,SAASE,GAAiB,CACxB,OAAAV,GAAK,CAACA,GAAKW,EAAUX,CAAC,GAAKC,EAAK,OAAO,EAAE,oBAAoB,CACtE,CAEgB,SAAAW,EAAcC,EAAsBJ,EAAM,GAAI,CAC5D,UACE,CAACT,GACDI,EAAKJ,CAAC,EAAE,cAAca,CAAG,GACxBJ,GAAYR,EAAK,OAAO,EAAE,iBAAkB,CAACY,CAAG,CAAC,CACtD,CAEO,SAASC,GAAW,CACzB,MAAMC,EAAQ,wBACd,UAAY,CAACf,GAAKe,EAAM,KAAKf,CAAC,GAAK,gCACrC"}